{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?2eda","webpack:///./src/App.vue","webpack:///./src/packages/Index.util.ts","webpack:///./src/packages/utils/useModel.tsx","webpack:///./src/packages/components/block-resize/BlockResize.tsx","webpack:///./src/packages/VisualEditorProps.tsx","webpack:///./src/packages/VisualEditorBlock.tsx","webpack:///./src/packages/utils/defer.ts","webpack:///./src/packages/components/table-prop-editor/TablePropEditService.tsx","webpack:///./src/packages/components/table-prop-editor/TablePropEditor.tsx","webpack:///./src/packages/VisualEditorOperator.tsx","webpack:///./src/packages/utils/dialog-service.tsx","webpack:///./src/packages/plugins/keyboard-code.ts","webpack:///./src/packages/plugins/command.plugin.ts","webpack:///./src/packages/visual.command.tsx","webpack:///./src/packages/plugins/event.ts","webpack:///./src/packages/utils/dropdown-service.tsx","webpack:///./src/packages/Index.tsx","webpack:///./src/packages/components/number-range/NumberRange.tsx","webpack:///./src/packages/VisualEditorConfig.tsx","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","jsonData","config","formData","customProps","createVisualEditorConfig","componentList","componentMap","registry","component","comp","createNewBlock","top","left","componentKey","adjustPosition","focus","zIndex","width","height","hasResize","props","model","VisualDragProvider","VISUAL_DRAG_PROVIDER","provide","inject","useModel","emitter","state","val","modelValue","type","emits","setup","ctx","emit","setTimeout","blocks","container","map","item","Direction","VisualEditorPropsType","block","required","resize","dragStart","dragEnd","startX","startY","startWidth","startHeight","startLeft","startTop","direction","horizontal","start","vertical","dragging","mousedown","e","stopPropagation","clientX","clientY","document","addEventListener","mousemove","mouseup","moveX","moveY","center","durX","durY","removeEventListener","end","VisualEditorBlock","slots","blockEl","offsetWidth","offsetHeight","blockStyle","classes","renderContent","dragComp","slotName","render","size","keys","reduce","prev","propName","modelName","custom","createEditorInputProp","label","input","createEditorColorProp","color","createEditorSelectProp","options","select","createEditorTableProp","option","table","defer","dfd","promise","Promise","resolve","reject","ServiceComponent","showFlag","mounted","editData","methods","service","show","hide","add","reset","handler","onCancel","onConfirm","onDelete","index","assign","proxy","default","onClick","row","field","$index","footer","$$tablePropEditor","instance","el","createElement","body","appendChild","app","mount","Array","propConfig","showKey","DialogServiceEditType","VisualEditorOperator","dataModel","updateBlock","Function","updateModelValue","immediate","newBlock","renderEditor","opt","content","entries","moduleName","step","KeyboardCode","16","17","18","8","9","13","27","32","37","38","39","40","46","189","187","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","112","113","114","115","116","117","118","119","120","121","122","123","useCommander","current","queue","commands","commandArray","destroyList","register","command","execute","undo","redo","followQueue","init","keyboardEvent","onKeydown","activeElement","keyCode","shiftKey","altKey","ctrlKey","metaKey","keyString","keyNames","join","forEach","keyboard","isArray","indexOf","preventDefault","console","log","queueItem","fn","useVisualCommand","focusData","updateBlocks","commander","before","after","unFocus","this","dragstart","dragend","drag","on","off","maxZIndex","Math","max","minZIndex","min","Infinity","dur","abs","oldBlock","delete","clear","placeTop","placeBottom","updateModuleValue","createEvent","listeners","cb","keyGenerator","count","editValue","title","editType","textarea","DialogService","$$dialog","initValue","DropdownServiceProvider","DROPDOWN_SERVICE_PROVIDER","reference","getBoundingClientRect","styles","onMousedownDocument","contains","target","DropdownOption","String","icon","click","dropdownClickHandler","$$dropdown","append","VisualEditor","components","containerRef","selectIndex","selectBlock","preview","editFlag","containerClasses","previewCanvasStyle","canvasStyle","clearFocus","filter","showBlockData","JSON","stringify","editReadonly","importBlockData","text","parse","error","alert","openEdit","menuDraggier","dragComponent","containerHandler","dragenter","dataTransfer","dropEffect","dragover","dragleave","blockHandler","drop","offsetY","offsetX","focusHandler","onMousedown","currentTarget","blockDraggier","mark","x","y","dragState","startPos","markLines","lines","w","h","markY","markX","currentLeft","currentTop","currentMark","onContextmenuBlock","buttons","tip","onContextmenu","startModel","endModel","visualConfig","fontSize","onChange","url","username","subBtn","$notify","message","mySelect","App","use"],"mappings":"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","file":"js/app.f1df2018.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=ab247e88&lang=scss\"","<template>\n  <div id=\"app\">\n    <visual-editor v-model=\"jsonData\" :config=\"config\" :formData=\"formData\" :customProps=\"customProps\" >\n      <!-- 给一个按钮添加组件标识subBtn，给一个下拉框绑定字段为food -->\n      <!-- <template #subBtn>\n        <el-button v-if=\"formData.food === 'dangao'\">自定义按钮</el-button>\n        <el-tag v-else>自定义标签</el-tag>\n      </template> -->\n    </visual-editor>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport { VisualEditor } from \"./packages/Index\";\nimport { visualConfig } from \"./packages/VisualEditorConfig\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    VisualEditor\n  },\n  data() {\n    return {\n      val: \"111\",\n      formData: {\n        username: \"admin\"\n      },\n      // 左侧配置组件\n      config: visualConfig,\n      // 工作区\n      jsonData: {\n        container: {\n          width: 1000,\n          height: 1000\n        },\n        blocks: []\n      },\n      customProps: {\n        subBtn: { // subBtn是组件标识\n          onClick: () => {\n            this.$notify({ message: \"执行表单数据校验以及添加到服务器的动作\" });\n          }\n        },\n        mySelect: {\n          onChange: (val: any) => {\n            this.$notify({ message: `下拉框发生变化，${val}` });\n          }\n        }\n      }\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\">\n#app {\n  @include wh100;\n  .box {\n    @include wh100;\n    @include flex-layout;\n    position: relative;\n    .header {\n      position: absolute;\n      height: 100px;\n      background: red;\n    }\n    .content {\n      flex: 1;\n      overflow: auto;\n      background: yellow;\n      .scrollel {\n        width: 3000px;\n        height: 3000px;\n      }\n    }\n  }\n}\n</style>\n","import { VisualEditorProps } from \"./VisualEditorProps\";\nimport { provide, inject } from 'vue';\n\nexport interface VisualEditorBlockData {\n    componentKey: string;\n    top: number;\n    left: number;\n    adjustPosition?: boolean;  // 是否鼠标抬起需要调整位置\n    focus?: boolean; // 是否为选中状态\n    zIndex: number; // 权重，用于置顶，置底\n    width: number;  // block的宽度\n    height: number; // block的高度度\n    hasResize?: boolean; // 是否调整过宽度或者高度\n    props: Record<string, any>; // 组件的设计属性\n    model: Record<string, string>; // 绑定的字段\n    slotName?: string; // 组件唯一标识\n}\n\nexport interface VisualEditorModelValue {\n    container: {\n        width: number;\n        height: number;\n    },\n    blocks?: VisualEditorBlockData[];\n}\n\n// 左侧都有哪些组件-配置\nexport interface VisualEditorComponent {\n    key: string,\n    label: string,\n    preview: () => JSX.Element,\n    render: (data: { \n        props: any, \n        model: any, \n        size: { width?: number, height?: number },\n        custom: Record<string, any>\n    }) => JSX.Element,\n    props?: Record<string, VisualEditorProps>,\n    model?: Record<string, string>,\n    resize?: { width?: boolean, height?: boolean }\n}\n\n// 当前操作block的标志线\nexport interface VisualEditorMarkLines {\n    x: { left: number, markX: number }[],\n    y: { top: number, markY: number }[]\n}\n\n// 创建可视化编辑器配置\n// 返回组件列表、组件映射、注册函数\nexport function createVisualEditorConfig() {\n    const componentList: VisualEditorComponent[] = [];\n    const componentMap: Record<string, VisualEditorComponent> = {};\n    return {\n        componentList,\n        componentMap,\n        registry: <Props extends Record<string, VisualEditorProps> = {}, Model extends Record<string, string> = {}>(key: string, component: {\n            label: string,\n            preview: () => JSX.Element,\n            render: (data: {\n                props: { [k in keyof Props]: any },\n                model: Partial<{ [k in keyof Model]: any }>,\n                size: { width?: number, height?: number },\n                custom: Record<string, any>\n            }) => JSX.Element,\n            props?: Props,\n            model?: Model,\n            resize?: { width?: boolean, height?: boolean }\n        }) => {\n            let comp = { ...component, key };\n            componentList.push(comp);\n            componentMap[key] = comp;\n        }\n    }\n}\n\nexport type VisualEditorConfig = ReturnType<typeof createVisualEditorConfig>;\n\n// 创建block\nexport function createNewBlock({ component, top, left }: { component: VisualEditorComponent, top: number, left: number }): VisualEditorBlockData {\n    return {\n        componentKey: component!.key,\n        top,\n        left,\n        adjustPosition: true,\n        focus: false,\n        zIndex: 0,\n        width: 0,\n        height: 0,\n        hasResize: false,\n        props: {},\n        model: {}\n    }\n}\n\nexport interface VisualDragEvent {\n    dragStart: {\n        on: (cb: () => void) => void,\n        off: (cb: () => void) => void,\n        emit: () => void,\n    },\n    dragEnd: {\n        on: (cb: () => void) => void,\n        off: (cb: () => void) => void,\n        emit: () => void,\n    }\n}\n\nexport const VisualDragProvider = (() => {\n    const VISUAL_DRAG_PROVIDER = '@@VISUAL_DRAG_PROVIDER';\n    return {\n        provide: (data: VisualDragEvent) => {\n            provide(VISUAL_DRAG_PROVIDER, data);\n        },\n        inject: () => {\n            return inject(VISUAL_DRAG_PROVIDER) as VisualDragEvent;\n        }\n    }\n})();\n","import { ref, watch, defineComponent } from 'vue';\n\nexport function useModel<T>(getter: () => T, emitter: (val: T) => void) {\n    // 获取getter函数的返回值，并单独保存一份\n    const state = ref(getter()) as { value: T };\n    // 观察getter，取值操作，则重新给state赋值， 测试时，两个TestUserModel需要这个\n    watch(getter, (val: T) => {\n        if (val !== state.value) {\n            state.value = val;\n        }\n    })\n    // 返回计算属性，获取\n    return {\n        get value() { return state.value },\n        set value(val: T) {\n            if (state.value !== val) {\n                state.value = val;\n                emitter(val);\n            }\n        }\n    }\n}\n\nexport const TestUseModel = defineComponent({\n    props: {\n        modelValue: {\n            type: Object\n        }\n    },\n    emits: {\n        'update:modelValue': (val?: any) => {\n            return true;\n        }\n    },\n    setup(props, ctx) {\n        const model: any = useModel(() => props.modelValue, val => ctx.emit('update:modelValue', val));\n        // console.log('model :>> ', model);\n        setTimeout(() => {\n            model.value.blocks = [{\n                componentKey: \"text\",\n                top: 100,\n                left: 100\n            },\n            {\n                componentKey: \"input\",\n                top: 300,\n                left: 300\n            }]\n            model.value.container.width = 50;\n        }, 3000)\n        return () => (\n            <div>\n                自定义的输入框\n                {\n                    (model.value.blocks || []).map((item: any) => (\n                        <div>{item.componentKey}</div>\n                    ))\n                }\n                <div>containerWidth: {model.value.container.width}</div>\n            </div>\n        )\n    }\n})","import { defineComponent, PropType } from 'vue';\nimport './BlockResize.scss';\nimport { VisualEditorBlockData, VisualEditorComponent, VisualDragProvider } from '@/packages/Index.util';\n\nenum Direction {\n    start = 'start',\n    center = \"center\",\n    end = \"end\"\n}\n\n\nexport const BlockResize = defineComponent({\n    props: {\n        block: {\n            type: Object as PropType<VisualEditorBlockData>,\n            required: true\n        },\n        component: {\n            type: Object as PropType<VisualEditorComponent>,\n            required: true\n        }\n    },\n    setup(props) {\n        return () => {\n            const { width, height } = props.component.resize || {};\n\n            const { dragStart, dragEnd } = VisualDragProvider.inject();\n\n            const onMousedown = (() => {\n                let data = {\n                    startX: 0,\n                    startY: 0,\n                    startWidth: 0,\n                    startHeight: 0,\n                    startLeft: 0,\n                    startTop: 0,\n                    direction: {\n                        horizontal: Direction.start,\n                        vertical: Direction.start\n                    },\n                    dragging: false, // 是否正在拖拽\n                }\n\n                const mousedown = (e: MouseEvent, direction: { horizontal: Direction, vertical: Direction }) => {\n                    e.stopPropagation(); // 拖拽的时候也调了mousedown方法（会导致一边改变大小，一边拖拽）\n                    data = {\n                        startX: e.clientX,\n                        startY: e.clientY,\n                        startWidth: props.block.width,\n                        startHeight: props.block.height,\n                        startLeft: props.block.left,\n                        startTop: props.block.top,\n                        direction,\n                        dragging: false\n                    }\n                    document.addEventListener('mousemove', mousemove);\n                    document.addEventListener('mouseup', mouseup);\n                }\n\n                const mousemove = (e: MouseEvent) => {\n                    let { startX, startY, startWidth, startHeight, startLeft, startTop, direction, dragging } = data;\n                    let { clientX: moveX, clientY: moveY } = e;\n\n                    // 修改拖拽状态\n                    if (!dragging) {\n                        data.dragging = true;\n                        dragStart.emit();\n                    }\n\n                    // 纵向拖拽-拖拽的是上、下的中间，则不允许向左右扩展宽度\n                    if (direction.horizontal === Direction.center) {\n                        moveX = startX\n                    }\n                    // 横向拖拽-拖拽的是左、右的中间，则不允许向上下扩展宽度\n                    if (direction.vertical === Direction.center) {\n                        moveY = startY\n                    }\n\n                    let durX = moveX - startX;\n                    let durY = moveY - startY;\n                    const block = props.block as VisualEditorBlockData;\n                    // 如果拖拽的是左上角，则不需要改变尺寸\n                    if (direction.vertical === Direction.start) {\n                        durY = -durY;\n                        block.top = startTop - durY;\n                    }\n                    if (direction.horizontal === Direction.start) {\n                        durX = -durX;\n                        block.left = startLeft - durX;\n                    }\n\n                    const width = startWidth + durX;\n                    const height = startHeight + durY;\n                    block.width = width;\n                    block.height = height;\n                    block.hasResize = true;\n\n                }\n\n                const mouseup = () => {\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', mouseup);\n                    // 修改拖拽状态\n                    if (data.dragging) {\n                        data.dragging = false;\n                        dragEnd.emit();\n                    }\n                }\n\n                return mousedown;\n            })()\n\n            return <>\n                {!!height && <>\n                    <div class=\"block-resize block-resize-top\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.center,\n                            vertical: Direction.start\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-bottom\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.center,\n                            vertical: Direction.end\n                        })}>\n                    </div>\n                </>}\n                {!!width && <>\n                    <div class=\"block-resize block-resize-left\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.start,\n                            vertical: Direction.center\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-right\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.end,\n                            vertical: Direction.center\n                        })}>\n                    </div>\n                </>}\n                {!!width && !!height && <>\n                    <div class=\"block-resize block-resize-top-left\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.start,\n                            vertical: Direction.start\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-top-right\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.end,\n                            vertical: Direction.start\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-bottom-left\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.start,\n                            vertical: Direction.end\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-bottom-right\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.end,\n                            vertical: Direction.end\n                        })}>\n                    </div>\n                </>}\n            </>\n        }\n    }\n\n})","// 右侧功能菜单\n\n// 功能菜单的表单类型\nexport enum VisualEditorPropsType {\n    input = 'input',\n    color = \"color\",\n    select = \"select\",\n    table = \"table\"\n}\n\n// 功能菜单的类型\nexport type VisualEditorProps = {\n    type: VisualEditorPropsType;\n    label: string;\n} & {\n    options?: VisualEditorSelectOptions\n} & {\n    table?: VisualEditorTableOption\n}\n\n// 创建input输入框属性\nexport function createEditorInputProp(label: string): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.input,\n        label\n    }\n}\n\n// 创建color颜色选择器属性\nexport function createEditorColorProp(label: string): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.color,\n        label\n    }\n}\n\n// 创建select下拉框属性\nexport type VisualEditorSelectOptions = {\n    label: string,\n    val: string\n}[]\nexport function createEditorSelectProp(label: string, options: VisualEditorSelectOptions): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.select,\n        label,\n        options\n    }\n}\n\n// 表格table\nexport type VisualEditorTableOption = {\n    options: {\n        label: string, // 列表显示文本\n        field: string, // 列表绑定字段\n    }[],\n    showKey: string\n}\nexport function createEditorTableProp(label: string, option: VisualEditorTableOption): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.table,\n        label,\n        table: option\n    }\n}\n","import { defineComponent, PropType, computed, ref, onMounted, Slot } from 'vue';\nimport { VisualEditorBlockData, VisualEditorConfig } from './Index.util';\nimport { BlockResize } from './components/block-resize/BlockResize';\n\nconst VisualEditorBlock = defineComponent({\n    props: {\n        block: {\n            type: Object as PropType<VisualEditorBlockData>,\n            required: true\n        },\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        formData: {\n            type: Object as PropType<Record<string, any>>,\n            required: true\n        },\n        slots: {\n            type: Object as PropType<Record<string, Slot | undefined>>,\n            required: true\n        },\n        customProps: {\n            type: Object as PropType<Record<string, any>>\n        }\n    },\n    setup(props) {\n        // 鼠标抬起，元素以鼠标位置为中心居中\n        const blockEl = ref({} as HTMLDivElement);\n        onMounted(() => {\n            const block = props.block;\n            if (block.adjustPosition) {\n                const { offsetWidth, offsetHeight } = blockEl.value;\n                block.left = block.left - offsetWidth / 2;\n                block.top = block.top - offsetHeight / 2;\n                block.width = offsetWidth;\n                block.height = offsetHeight;\n                block.adjustPosition = false; // 已经放到了画布，设置为false\n            }\n        });\n        // 样式\n        // const { left, top } = toRefs(props.block);\n        const blockStyle = computed(() => ({\n            left: `${props.block.left}px`,\n            top: `${props.block.top}px`,\n            zIndex: props.block.zIndex\n        }));\n        const classes = computed(() => ([\n            'visual-editor-block',\n            {\n                'visual-editor-block-focus': props.block.focus\n            }\n        ]))\n\n        return () => {\n            // 渲染\n            const dragComp = props.config.componentMap[props.block.componentKey];\n            const formData = props.formData as Record<string, any>;\n            let renderContent: any;\n            // 有自定义slot，则渲染slot的数据\n            if (!!props.block.slotName && !!props.slots[props.block.slotName]) {\n                renderContent = props.slots[props.block.slotName]!();\n            } else {\n                renderContent = dragComp.render({\n                    props: props.block.props || {},\n                    size: props.block.hasResize ? {\n                        width: props.block.width,\n                        height: props.block.height\n                    } : {},\n                    model: Object.keys(dragComp.model || {}).reduce((prev, propName) => {\n                        const modelName = props.block.model ? props.block.model[propName] : null;\n                        prev[propName] = {\n                            [propName === 'default' ? 'modelValue' : propName]: !!modelName ? formData[modelName] : null,\n                            [propName === 'default' ? 'onUpdate:modelValue' : 'onChange']: (val: any) => {\n                                !!modelName && (formData[modelName] = val);\n                            }\n                        }\n                        return prev;\n                    }, {} as Record<string, any>),\n                    custom: (!props.block.slotName || !props.customProps) ? {} : (props.customProps[props.block.slotName] || {})\n                });\n            }\n\n            const { width, height } = dragComp.resize || {};\n\n            return (\n                <div class={classes.value} style={blockStyle.value} ref={blockEl}>\n                    {renderContent}\n                    {\n                        !!props.block.focus\n                        && (!!width || !!height)\n                        && <BlockResize block={props.block} component={dragComp} />}\n                </div>\n            )\n        }\n    }\n})\n\nexport default VisualEditorBlock;\n","interface Defer {\n    (): {\n        resolve: () => void,\n        reject: () => void,\n        promise: Promise<void>\n    },\n\n    <T>(): {\n        resolve: (val: T) => void,\n        reject: () => void,\n        promise: Promise<T>\n    },\n}\n\nexport const defer: Defer = () => {\n    const dfd = {} as any\n    dfd.promise = new Promise((resolve, reject) => {\n        dfd.resolve = resolve as any\n        dfd.reject = reject\n    })\n    return dfd\n}","// 点击tag展示的表格选项\n\nimport { VisualEditorProps } from \"@/packages/VisualEditorProps\";\nimport { createApp, defineComponent, getCurrentInstance, onMounted, PropType, reactive } from 'vue';\nimport { defer } from \"@/packages/utils/defer\";\nimport { ElDialog, ElTable, ElButton, ElTableColumn, ElInput } from \"element-plus\";\nimport deepcopy from \"deepcopy\";\n\nexport interface TablePropEditorServiceOption {\n    data: any[];\n    config: VisualEditorProps;\n    onConfirm: (val: any[]) => void;\n}\n\n// 定义组件\nconst ServiceComponent = defineComponent({\n    props: {\n        option: {\n            type: Object as PropType<TablePropEditorServiceOption>,\n            required: true\n        }\n    },\n    setup(props) {\n        // 获取当前组件实例，用于将将service绑定到实例上\n        const ctx = getCurrentInstance()!;\n\n        // 响应式数据\n        const state = reactive({\n            option: props.option,\n            showFlag: false, // 展示弹窗\n            mounted: (() => {\n                const dfd = defer();\n                onMounted(() => setTimeout(() => dfd.resolve(), 0))\n                return dfd.promise;\n            })(),\n            editData: [] as any[] // 当前编辑的数据\n        })\n\n        // 方法\n        const methods = {\n            service: (option: TablePropEditorServiceOption) => {\n                state.option = option;\n                state.editData = deepcopy(option.data || []);\n                methods.show();\n            },\n            show: async () => {\n                await state.mounted;\n                state.showFlag = true;\n            },\n            hide: () => {\n                state.showFlag = false;\n            },\n            add: () => {\n                state.editData.push({});\n            },\n            reset: () => {\n                state.editData = deepcopy(state.option.data);\n            }\n        }\n\n        const handler = {\n            onCancel: () => {\n                methods.hide();\n            },\n            onConfirm: () => {\n                state.option.onConfirm(state.editData);\n                methods.hide();\n            },\n            onDelete: (index: number) => {\n                state.editData.splice(index, 1);\n            }\n        }\n\n\n        Object.assign(ctx.proxy, methods);\n\n        // @ts-ignore\n        return () => <ElDialog v-model={state.showFlag}>\n            {{\n                default: () => (\n                    <div>\n                        <div>\n                            <ElButton type=\"primary\" {...{ onClick: methods.add } as any}>添加</ElButton>\n                            <ElButton {...{ onClick: methods.reset } as any}>重置</ElButton>\n                        </div>\n\n                        <ElTable data={state.editData}>\n                            <ElTableColumn {...{ type: 'index' } as any} />\n                            {state.option.config.table!.options.map((item) => (\n                                <ElTableColumn {...{ label: item.label } as any}>\n                                    {{\n                                        default: ({ row }: { row: any }) => {\n                                            return <ElInput v-model={row[item.field]} />\n                                        }\n                                    }}\n                                </ElTableColumn>\n                            ))}\n                            <ElTableColumn {...{ label: '操作栏' } as any}>\n                                {{\n                                    default: ({ $index }: { $index: number }) => <ElButton\n                                        type=\"danger\"\n                                        {...{ onClick: () => handler.onDelete($index) } as any}\n                                        >删除\n                                    </ElButton>\n\n                                }}\n                            </ElTableColumn>\n                        </ElTable>\n                    </div>\n                ),\n                footer: () => <>\n                    <ElButton {...{ onClick: handler.onCancel } as any}>取消</ElButton>\n                    <ElButton type=\"primary\" {...{ onClick: handler.onConfirm } as any}>确定</ElButton>\n                </>\n            }}\n        </ElDialog>\n    }\n})\n\nexport const $$tablePropEditor = (() => {\n    let instance: any;\n    return (option: Omit<TablePropEditorServiceOption, 'onConfirm'>) => {\n        if (!instance) {\n            const el = document.createElement('div');\n            document.body.appendChild(el);\n            const app = createApp(ServiceComponent, { option });\n            instance = app.mount(el);\n        }\n        const dfd = defer<any[]>();\n        instance.service({\n            ...option,\n            onConfirm: dfd.resolve\n        });\n        return dfd.promise;\n    }\n})()\n\n\n","// 编辑表格组件\nimport { VisualEditorProps } from '@/packages/VisualEditorProps';\nimport { defineComponent, PropType } from 'vue';\nimport { useModel } from '@/packages/utils/useModel';\nimport './TablePropEditor.scss';\nimport { ElButton, ElTag } from 'element-plus';\nimport { $$tablePropEditor } from './TablePropEditService';\n\n// 右侧点击tag，添加属性\nexport const TablePropEditor = defineComponent({\n    props: {\n        modelValue: { // 属性名, 如：type，size\n            type: Array as PropType<any[]>\n        },\n        propConfig: { // 属性值\n            type: Object as PropType<VisualEditorProps>,\n            required: true\n        }\n    },\n    emits: {\n        'update:modelValue': (val?: any[]) => true\n    },\n    setup(props, ctx) {\n        // 监听属性名，属性名变动\n        const model = useModel(() => props.modelValue, val => ctx.emit('update:modelValue', val));\n        \n        const onClick = async () => {\n            // 展示弹窗 data是添加的数据集合\n            const data = await $$tablePropEditor({\n                config: props.propConfig,\n                data: props.modelValue || []\n            })\n            // console.log('data :>> ', data);\n            model.value = data;\n        }\n\n        return () => (\n            <div>\n                {   // 如果没有值，则展示添加按钮\n                    (!model.value || model.value.length == 0) && <ElButton {...{onClick} as any}>添加</ElButton>\n                }\n                {   // 如果有值，则展示tag\n                    (model.value || []).map((item) => {\n                        return <ElTag {...{onClick} as any}>\n                            {item[props.propConfig.table!.showKey]}\n                        </ElTag>\n                    })\n                }\n            </div>\n        )\n    }\n})\n\n\n\n\n","import { defineComponent, PropType, reactive, watch } from \"vue\";\nimport { VisualEditorBlockData, VisualEditorConfig, VisualEditorModelValue } from \"./Index.util\";\nimport { VisualEditorProps, VisualEditorPropsType } from \"./VisualEditorProps\";\nimport {\n    ElForm,\n    ElFormItem,\n    ElInputNumber,\n    ElInput,\n    ElColorPicker,\n    ElSelect,\n    ElOption,\n    ElButton\n} from 'element-plus';\nimport deepcopy from \"deepcopy\";\nimport { TablePropEditor } from \"./components/table-prop-editor/TablePropEditor\";\n\nexport const VisualEditorOperator = defineComponent({\n    props: {\n        block: { // 当前选中的block元素，包含位置、属性、model等\n            type: Object as PropType<VisualEditorBlockData>\n        },\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        dataModel: {\n            type: Object as PropType<{ value: VisualEditorModelValue }>,\n            required: true\n        },\n        updateBlock: {\n            type: Function as PropType<((newBlock: VisualEditorBlockData, oldBlock: VisualEditorBlockData) => void)>,\n            required: true\n        },\n        updateModelValue: {\n            type: Function as PropType<((val: VisualEditorModelValue) => void)>,\n            required: true\n        }\n    },\n    setup(props) {\n        // 响应式数据\n        const state = reactive({\n            editData: '' as any, // 编辑数据\n        })\n\n        // 观察当前操作的block\n        watch(() => props.block, (val) => {\n            // 不存在，则编辑容器\n            if (!val) {\n                state.editData = deepcopy(props.dataModel.value.container); // {width: 100, height: 100}\n                // 存在，则编辑当前block\n            } else {\n                state.editData = deepcopy(val || {});\n            }\n        }, { immediate: true })\n\n        // 应用、重置功能按钮\n        const methods = {\n            apply: () => {\n                // 编辑容器属性\n                if (!props.block) {\n                    props.updateModelValue({\n                        ...props.dataModel.value,\n                        container: state.editData\n                    })\n                    // 编辑block的属性\n                } else {\n                    const newBlock = state.editData;\n                    // const newBlock = {\n                    //     ...props.block,\n                    //     props: state.editData\n                    // }\n                    props.updateBlock(newBlock, props.block);\n                }\n            },\n            reset: () => {\n                if (!props.block) {\n                    state.editData = deepcopy(props.dataModel.value.container);\n                } else {\n                    state.editData = deepcopy(props.block || {})\n                }\n            }\n        }\n\n        // 根据枚举，不同的类型渲染不同的组件\n        const renderEditor = (propName: string, propConfig: VisualEditorProps) => {\n            return {\n                [VisualEditorPropsType.input]: () => (<ElInput v-model={state.editData.props[propName]} />),\n                [VisualEditorPropsType.color]: () => (<ElColorPicker v-model={state.editData.props[propName]} />),\n                [VisualEditorPropsType.select]: () => (<ElSelect v-model={state.editData.props[propName]}>\n                    {(() => {\n                        return propConfig.options!.map(opt => {\n                            return <ElOption label={opt.label} value={opt.val} />\n                        })\n                    })()}\n                </ElSelect>),\n                [VisualEditorPropsType.table]: () => (\n                    <TablePropEditor\n                        v-model={state.editData.props[propName]} // 当前操作block的属性名， 如：type、size、color\n                        propConfig={propConfig} // 当前操作block的属性值\n                    />\n                ),\n            }[propConfig.type]()\n        }\n\n        return () => {\n            let content: JSX.Element[] = [];\n            // 没有选中任何block\n            if (!props.block) {\n                content.push(<>\n                    <ElFormItem label=\"容器宽度\">\n                        <ElInputNumber v-model={state.editData.width} {...{ step: 100 }} />\n                    </ElFormItem>\n                    <ElFormItem label=\"容器高度\">\n                        <ElInputNumber v-model={state.editData.height} {...{ step: 100 }} />\n                    </ElFormItem>\n                </>)\n                // 选中block，展示对应的操作功能组件\n            } else {\n                const { componentKey } = props.block; // 当前选中block的组件类型: 如：button, input, text, select \n                const component = props.config.componentMap[componentKey]; // {key: 'button', label: '按钮'，props: {}, preview: fn, render: fn}\n                // console.log('component :>> ', component, component.props);\n\n                // 组件标识\n                content.push(<ElFormItem label=\"组件标识\">\n                    <ElInput v-model={state.editData.slotName} />\n                </ElFormItem>)\n\n                if (!!component) {\n                    if (!!component.props) {\n                        content.push(<>\n                            {\n                                Object.entries(component.props || {}).map(([propName, propConfig]) => ( // props: {text:\"xx\", type:\"primary\", size:\"24px\", color:\"red\", options:[options:[], showKey: 'tag']}\n                                    <ElFormItem label={propConfig.label} key={propName}>\n                                        {renderEditor(propName, propConfig)}\n                                    </ElFormItem>\n                                ))\n                            }\n                        </>)\n                    }\n                    if (!!component.model) {\n                        content.push(<>\n                            {\n                                Object.entries(component.model || {}).map(([moduleName, label]) => ( // props: {text:\"xx\", type:\"primary\", size:\"24px\", color:\"red\", options:[options:[], showKey: 'tag']}\n                                    <ElFormItem label={label}>\n                                        <ElInput v-model={state.editData.model[moduleName]} />\n                                    </ElFormItem>\n                                ))\n                            }\n                        </>)\n                    }\n                }\n            }\n\n            return (\n                <div class=\"visual-editor-operator\">\n                    <ElForm labelPosition=\"top\">\n                        {content}\n                        <ElFormItem>\n                            <ElButton {...{ onClick: methods.reset } as any}>重置</ElButton>\n                            <ElButton type=\"primary\" {...{ onClick: methods.apply } as any}>应用</ElButton>\n                        </ElFormItem>\n                    </ElForm>\n                </div>\n            )\n        }\n    }\n})","// 导入\n\nimport { createApp, defineComponent, getCurrentInstance, PropType, reactive } from \"vue\";\nimport { defer } from \"./defer\";\nimport {\n    ElInput,\n    ElDialog,\n    ElButton\n} from 'element-plus';\n\n// 弹窗内部展示的组件类型，文本域或输入框\nenum DialogServiceEditType {\n    textarea = 'textarea',\n    input = 'input'\n}\n\ninterface DialogServiceOption {\n    title?: string; // 标题\n    editType: DialogServiceEditType; // 弹窗内部组件类型\n    editReadonly?: boolean; // 是否只读，导入可以确认取消-否，导出-是\n    editValue?: string | null; // 数据\n    onConfirm: (val?: string | null) => void;\n}\n\n// 为了每次展示弹窗都是最新的内容，所以加了key\nconst keyGenerator = (() => {\n    let count = 0;\n    return () =>`auto_key_${count++}`;\n})()\n\nconst ServiceComponent = defineComponent({\n    props: {\n        option: { type: Object as PropType<DialogServiceOption>, required: true }\n    },\n    setup(props) {\n        // 获取当前实例\n        const ctx = getCurrentInstance()!;\n        // 响应式变量\n        const state = reactive({\n            option: props.option,\n            editValue: null as undefined | null | string,\n            showFlag: false,\n            key: keyGenerator()\n        });\n\n        const methods = {\n            service: (option: DialogServiceOption) => {\n                state.option = option;\n                state.editValue = option.editValue;\n                state.key = keyGenerator();\n                methods.show();\n            },\n            show: () => {\n                state.showFlag = true;\n            },\n            hide: () => {\n                state.showFlag = false;\n            }\n        }\n\n        const handler = {\n            onConfirm: () => {\n                state.option.onConfirm(state.editValue);\n                methods.hide();\n            },\n            onCancel: () => {\n                methods.hide();\n            }\n        }\n\n        // 将methods绑定到实例上（否则访问不到）\n        Object.assign(ctx.proxy, methods);\n\n        return () => (\n            // @ts-ignore\n            <ElDialog v-model={state.showFlag} title={state.option.title} key={state.key}>\n                {{\n                    default: () => (\n                        <div>\n                            {\n                                state.option.editType === DialogServiceEditType.textarea ? (\n                                    <ElInput type=\"textarea\" {...{ row: 20 }} v-model={state.editValue} />\n                                ) : (\n                                        <ElInput v-model={state.editValue} />\n                                    )\n                            }\n                        </div>\n                    ),\n                    footer: () => (\n                        <div>\n                            <ElButton {...{ onClick: handler.onCancel } as any}>取消</ElButton>\n                            <ElButton {...{ onClick: handler.onConfirm } as any}>确定</ElButton>\n                        </div>\n                    )\n                }}\n            </ElDialog>\n        )\n    }\n})\n\nconst DialogService = (() => {\n    let instance: any;\n    return (option: DialogServiceOption) => {\n        if (!instance) {\n            const el = document.createElement('div');\n            document.body.appendChild(el);\n            const app = createApp(ServiceComponent, { option });\n            instance = app.mount(el);\n        }\n        instance.service(option);\n    }\n})()\n\nexport const $$dialog = Object.assign(DialogService, {\n    input: (initValue?: string, title?: string, option?: Omit<DialogServiceOption, 'editType' | 'onConfirm'>) => {\n        const dfd = defer<string | null | undefined>();\n        const opt: DialogServiceOption = { \n            ...option,\n            editType: DialogServiceEditType.input, \n            editValue: initValue,\n            onConfirm: dfd.resolve, \n            title\n        };\n        DialogService(opt);\n        return dfd.promise;\n    },\n    textarea: (initValue?: string, title?: string, option?: Omit<DialogServiceOption, 'editType' | 'onConfirm'>) => {\n        const dfd = defer<string | null | undefined>();\n        const opt: DialogServiceOption = {\n            ...option, \n            editType: DialogServiceEditType.textarea, \n            editValue: initValue,\n            onConfirm: dfd.resolve, \n            title \n        };\n        DialogService(opt);\n        return dfd.promise;\n    }\n})","export const KeyboardCode = {\n    16: 'shift',\n    17: 'ctrl',\n    18: 'alt',\n\n    8: 'backspace',\n    9: 'tab',\n    13: 'enter',\n    27: 'esc',\n    32: 'space',\n\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down',\n    46: 'delete',\n    189: '-',\n    187: '=',\n\n    48: '0',\n    49: '1',\n    50: '2',\n    51: '3',\n    52: '4',\n    53: '5',\n    54: '6',\n    55: '7',\n    56: '8',\n    57: '9',\n\n    65: 'a',\n    66: 'b',\n    67: 'c',\n    68: 'd',\n    69: 'e',\n    70: 'f',\n    71: 'g',\n    72: 'h',\n    73: 'i',\n    74: 'j',\n    75: 'k',\n\n    76: 'l',\n    77: 'm',\n    78: 'n',\n    79: 'o',\n    80: 'p',\n    81: 'q',\n    82: 'r',\n    83: 's',\n    84: 't',\n    85: 'u',\n    86: 'v',\n    87: 'w',\n    88: 'x',\n    89: 'y',\n    90: 'z',\n\n    112: 'F1',\n    113: 'F2',\n    114: 'F3',\n    115: 'F4',\n    116: 'F5',\n    117: 'F6',\n    118: 'F7',\n    119: 'F8',\n    120: 'F9',\n    121: 'F10',\n    122: 'F11',\n    123: 'F12',\n} as Record<number, string>","// 快捷键\nimport { onUnmounted, reactive } from 'vue';\nimport { KeyboardCode } from './keyboard-code';\n// 撤销、反撤销，操作方法\nexport interface CommandExecute {\n    undo: () => void,\n    redo: () => void\n}\n// 定义操作名称、快捷键、执行方法\nexport interface Command {\n    name: string; // 命令名称\n    keyboard?: string | string[]; // 快捷键\n    execute: (...args: any[]) => CommandExecute; // 撤销、反撤销时执行的函数\n    followQueue?: boolean; // 是否需要在命令执行完毕后，将执行的undo，redo方法存放到命令队列中\n    init?: () => any;\n    data?: any;\n}\n// 创建快捷键\nexport function useCommander() {\n    const state = reactive({\n        current: -1,\n        queue: [] as CommandExecute[], // [{undo, redo}]\n        commands: {} as Record<string, (...args: any[]) => void>, // {'undo': () => {queue.push({undo, redo})}}\n        commandArray: [] as Command[], // 保存销毁函数 init()的返回值\n        destroyList: [] as ((() => void | undefined))[], // 移除事件 removeEventListener\n    })\n    const register = (command: Command) => {\n        // 保存注册的对象\n        state.commandArray.push(command);\n        // 根据名称构建注册对象\n        state.commands[command.name] = (...args) => {\n            const { undo, redo } = command.execute(...args);\n            redo();\n            if (command.followQueue !== false) { // 注意这里的写法，如果是undefined也要走进去\n                // state.queue.push({ undo, redo });\n                // state.current += 1;\n                let { queue, current } = state;\n                if (queue.length > 0) {\n                    queue = queue.slice(0, current + 1);\n                    state.queue = queue;\n                }\n                queue.push({ undo, redo })\n                state.current = current + 1;\n            }\n        }\n        // 初始化，添加订阅\n        command.init && command.init();\n    }\n    // 键盘事件\n    const keyboardEvent = (() => {\n        // 键盘事件处理\n        const onKeydown = (e: KeyboardEvent) => {\n            // console.log(e);\n            if (document.activeElement !== document.body) return;\n            const { keyCode, shiftKey, altKey, ctrlKey, metaKey } = e;\n            let keyString: string[] = [];\n            if (ctrlKey || metaKey) keyString.push('ctrl');\n            if (shiftKey) keyString.push('shift');\n            if (altKey) keyString.push('alt');\n            keyString.push(KeyboardCode[keyCode]);\n            const keyNames = keyString.join('+');\n            // console.log('当前键盘', keyNames);\n\n            // 找到注册的方法并执行\n            state.commandArray.forEach(({ keyboard, name }) => {\n                if (!keyboard) return;\n                const keys = Array.isArray(keyboard) ? keyboard : [keyboard];\n                if (keys.indexOf(keyNames) > -1) {\n                    state.commands[name]();\n                    e.stopPropagation();\n                    e.preventDefault(); // 阻止默认行为，比如Ctrl+D会触发收藏，现在阻止了，只执行我们定义的\n                }\n            })  \n\n        }\n        const init = () => {\n            // 订阅键盘按下事件\n            window.addEventListener('keydown', onKeydown);\n            // 销毁键盘事件\n            return () => window.removeEventListener('keydown', onKeydown);\n        }\n        return init;\n    })();\n    // 初始化\n    const init = () => {\n        // console.log('init');\n        // 保存销毁函数\n        state.commandArray.forEach(command => !!command.init && state.destroyList.push(command.init()));\n        // 初始化键盘事件，添加移除事件\n        state.destroyList.push(keyboardEvent());\n    }\n    \n    // 注册undo\n    register({\n        name: 'undo',\n        keyboard: 'ctrl+z',\n        followQueue: false,\n        execute: (...args) => {\n            return {\n                undo: () => { console.log('undo撤销') },\n                redo: () => {\n                    // console.log('执行撤销');\n                    if (state.current === -1) return;\n                    const { undo } = state.queue[state.current];\n                    !!undo && undo();\n                    state.current -= 1;\n                }\n            }\n        }\n    })\n    // 注册redo\n    register({\n        name: 'redo',\n        keyboard: ['ctrl+y', 'ctrl+shift+z'],\n        followQueue: false,\n        execute: (...args) => {\n            return {\n                undo: () => { console.log('redo撤销') },\n                redo: () => {\n                    // console.log('执行重做');\n                    const queueItem = state.queue[state.current + 1];\n                    if (!!queueItem) {\n                        queueItem.redo();\n                        state.current++;\n                    }\n                }\n            }\n        }\n    })\n\n    onUnmounted(() => {\n        state.destroyList.forEach(fn => !!fn && fn());\n    })\n\n    return {\n        state,\n        register,\n        init\n    }\n}","import { VisualEditorBlockData, VisualEditorModelValue } from './Index.util';\nimport { useCommander } from './plugins/command.plugin';\nimport deepcopy from 'deepcopy';\nimport _Container from 'element-plus/lib/el-container';\n\n// 注册其他点击事件\nexport function useVisualCommand({ focusData, updateBlocks, dataModel, dragStart, dragEnd }: {\n    focusData: { value: { focus: VisualEditorBlockData[], unFocus: VisualEditorBlockData[] } },\n    updateBlocks: (blocks?: VisualEditorBlockData[]) => void,\n    dataModel: { value: VisualEditorModelValue },\n    dragStart: { on: (cb: () => void) => void, off: (cb: () => void) => void },\n    dragEnd: { on: (cb: () => void) => void, off: (cb: () => void) => void }\n}) {\n    // 注册内部undo，redo，得到包含commands、queue的对象\n    const commander = useCommander();\n    commander.init();\n    // commander = {\n    //     current: -1,\n    //     queue: [],\n    //     commands: {undo: ()=>{}, redo:()=>{}} // 内部undo，redo\n    // }\n    // 注册删除\n    commander.register({\n        name: 'delete',\n        keyboard: [\n            'backspace',\n            'delete',\n            'ctrl+d'\n        ],\n        execute: () => {\n            console.log('执行删除命令', updateBlocks);\n            let data = {\n                before: dataModel.value.blocks,\n                after: focusData.value.unFocus\n            }\n            return {\n                undo: () => {\n                    console.log('撤回删除命令');\n                    updateBlocks(data.before);\n                },\n                redo: () => {\n                    console.log('redo删除命令');\n                    updateBlocks(data.after);\n                }\n            }\n        }\n    })\n    // commander = {\n    //     current: -1,\n    //     queue: [{deleteUndo, deleteRedo}],\n    //     commands: {undo:()=>{redo()}, redo:()=>{redo()}, delete:()=> {redo()} }\n    // }\n\n    // 注册拖拽\n    commander.register({\n        name: 'drag',\n        init() {\n            this.data = {\n                before: null as null | VisualEditorBlockData[]\n            }\n            const handler = {\n                dragstart: () => {\n                    this.data.before = deepcopy(dataModel.value.blocks); // 不copy记不住它的位置\n                },\n                dragend: () => {\n                    commander.state.commands.drag();\n                }\n            }\n            // 添加订阅\n            dragStart.on(handler.dragstart);\n            dragEnd.on(handler.dragend);\n            // 销毁订阅\n            return () => {\n                console.log('拖拽-销毁订阅');\n                dragStart.off(handler.dragstart);\n                dragEnd.off(handler.dragend);\n            }\n        },\n        execute() {\n            let before = this.data.before;\n            let after = deepcopy(dataModel.value.blocks);\n            return {\n                undo: () => {\n                    console.log('undo撤回拖拽命令', before);\n\n                    updateBlocks(deepcopy(before));\n                },\n                redo: () => {\n                    console.log('redo拖拽命令', after);\n                    updateBlocks(deepcopy(after));\n                }\n            }\n        }\n    })\n    // 注册清空\n    commander.register({\n        name: 'clear',\n        execute() {\n            let data = {\n                before: deepcopy(dataModel.value.blocks),\n                after: deepcopy([])\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回清空命令', data.before);\n                    updateBlocks(deepcopy(data.before));\n                },\n                redo: () => {\n                    console.log('redo清空命令', data.after);\n                    updateBlocks(deepcopy(data.after));\n                }\n            }\n        }\n    })\n    // 注册置顶\n    commander.register({\n        name: 'placeTop',\n        keyboard: 'ctrl+up',\n        execute() {\n            let data = {\n                before: deepcopy(dataModel.value.blocks),\n                after: deepcopy((() => {\n                    const { focus, unFocus } = focusData.value;\n                    const maxZIndex = unFocus.reduce((prev, block) => Math.max(prev, block.zIndex), 0) + 1;\n                    // 给选中元素增加权重\n                    focus.forEach(block => block.zIndex = maxZIndex);\n                    return deepcopy(dataModel.value.blocks);\n                })())\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回置顶命令', data.before);\n                    updateBlocks(deepcopy(data.before));\n                },\n                redo: () => {\n                    console.log('redo置顶命令', data.after);\n                    updateBlocks(deepcopy(data.after));\n                }\n            }\n        }\n    })\n    // 注册置底\n    commander.register({\n        name: 'placeBottom',\n        keyboard: 'ctrl+down',\n        execute() {\n            let data = {\n                before: deepcopy(dataModel.value.blocks),\n                after: deepcopy((() => {\n                    const { focus, unFocus } = focusData.value;\n                    let minZIndex = unFocus.reduce((prev, block) => Math.min(prev, block.zIndex), Infinity) - 1;\n                    if (minZIndex < 0) { // 小于0,就让他等于0（小于0不太好）\n                        const dur = Math.abs(minZIndex);\n                        unFocus.forEach(block => block.zIndex += dur);\n                        minZIndex = 0;\n                    }\n                    // 给选中元素增加权重\n                    focus.forEach(block => block.zIndex = minZIndex);\n                    return deepcopy(dataModel.value.blocks);\n                })())\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回置底命令', data.before);\n                    updateBlocks(deepcopy(data.before));\n                },\n                redo: () => {\n                    console.log('redo置底命令', data.after);\n                    updateBlocks(deepcopy(data.after));\n                }\n            }\n        }\n    })\n\n    // 注册，更新单个block\n    commander.register({\n        name: 'updateBlock',\n        execute: (newBlock: VisualEditorBlockData, oldBlock: VisualEditorBlockData) => {\n            let blocks = deepcopy(dataModel.value.blocks || []);\n            let data = {\n                before: blocks,\n                after: (() => {\n                    blocks = [...blocks];\n                    const index = dataModel.value.blocks!.indexOf(oldBlock);\n                    if (index > -1) {\n                        blocks.splice(index, 1, newBlock);\n                    }\n                    return deepcopy(blocks);\n                })()\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回更新单个block命令', data.before);\n                    updateBlocks(deepcopy(data.before));\n                },\n                redo: () => {\n                    console.log('redo更新单个block命令', data.after);\n                    updateBlocks(deepcopy(data.after));\n                }\n            }\n        }\n    })\n    // 注册，更新dataModel\n    commander.register({\n        name: 'updateModelValue',\n        execute: (val: VisualEditorModelValue) => {\n            let data = {\n                before: deepcopy(dataModel.value),\n                after: deepcopy(val)\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回更新dataModel命令', data.before);\n                    dataModel.value = data.before;\n                },\n                redo: () => {\n                    console.log('redo更新dataModel命令', data.after);\n                    dataModel.value = data.after;\n                }\n            }\n        }\n    })\n    // 注册，全选\n    commander.register({\n        name: 'selectAll',\n        followQueue: false,\n        keyboard: 'ctrl+a',\n        execute: (val: VisualEditorModelValue) => {\n            return {\n                undo: () => {\n                    console.log('undo撤回全选命令');\n                },\n                redo: () => {\n                    console.log('redo全选命令');\n                    (dataModel.value.blocks || []).forEach(block => block.focus = true);\n                }\n            }\n        }\n    })\n    console.log('commands', commander.state);\n\n    return {\n        undo: () => commander.state.commands.undo(), // 内部，作用是执行queue中的undo\n        redo: () => commander.state.commands.redo(), // 内部，作用是执行queue中的redo\n        delete: () => commander.state.commands.delete(), // 外部注册 删除\n        drag: () => commander.state.commands.drag(), // 外部注册 拖拽\n        clear: () => commander.state.commands.clear(), // 外部注册 清空\n        placeTop: () => commander.state.commands.placeTop(), // 外部注册 置顶\n        placeBottom: () => commander.state.commands.placeBottom(), // 外部注册 置底\n        updateBlock: (newBlock: VisualEditorBlockData, oldBlock: VisualEditorBlockData) => commander.state.commands.updateBlock(newBlock, oldBlock), // 外部注册 更新block\n        updateModuleValue: (val: VisualEditorModelValue) => {\n            commander.state.commands.updateModelValue(val);\n        }, // 外部注册 更新dataModel\n    }\n}","type SimplyListener = () => void;\n\nexport function createEvent() {\n    let listeners: SimplyListener[] = [];\n    return {\n        on: (cb: SimplyListener) => {\n            listeners.push(cb);\n        },\n        off: (cb: SimplyListener) => {\n            const index = listeners.indexOf(cb);\n            if (index > -1) listeners.splice(index, 1);\n        },\n        emit: () => {\n            listeners.forEach(item => item());\n        }\n    }\n}","// 右键菜单\n\nimport { computed, createApp, defineComponent, getCurrentInstance, inject, onBeforeUnmount, onMounted, PropType, provide, reactive, ref } from \"vue\";\nimport { defer } from \"./defer\";\nimport './dropdown-service.scss';\n\nexport interface DropdownServiceOption {\n    reference: MouseEvent | HTMLElement;\n    render: () => JSX.Element; // 内容，返回一个虚拟dom\n}\n\n// 选择一条选项，则关闭菜单（父子组件通信）\nconst DropdownServiceProvider = (() => {\n    const DROPDOWN_SERVICE_PROVIDER = '@@DROPDOWN_SERVICE_PROVIDER';\n    return {\n        provide: (handler: { onClick: () => void }) => provide(DROPDOWN_SERVICE_PROVIDER, handler),\n        inject: () => inject(DROPDOWN_SERVICE_PROVIDER) as { onClick: () => void }\n    }\n})()\n\n// 小弹窗组件\nconst ServiceComponent = defineComponent({\n    props: {\n        option: {\n            type: Object as PropType<DropdownServiceOption>,\n            required: true\n        }\n    },\n    setup(props) {\n        // 获取当前组件实例，用于将将service绑定到实例上\n        const ctx = getCurrentInstance()!;\n        const el = ref({} as HTMLDivElement);\n        // 响应是状态\n        const state = reactive({\n            option: props.option,\n            showFlag: false,\n            top: 0,\n            left: 0,\n            mounted: (() => {\n                const dfd = defer();\n                onMounted(() => {\n                    setTimeout(() => { // 增加延迟是为了第一次右键也有动画效果\n                        dfd.resolve()\n                    }, 0)\n                });\n                return dfd.promise;\n            })()\n        })\n        // 方法\n        const methods = {\n            show: async () => {\n                await state.mounted;\n                state.showFlag = true\n            },\n            hide: async () => {\n                state.showFlag = false\n            }\n        }\n        \n        const service = (option: DropdownServiceOption) => {\n            state.option = option;\n            // HTMLElement\n            if ('addEventListener' in option.reference) {\n                const { top, left, height } = option.reference.getBoundingClientRect()!;\n                state.left = left;\n                state.top = top + height;\n                // MouseEvent\n            } else {\n                const { clientX, clientY } = option.reference;\n                state.left = clientX;\n                state.top = clientY;\n            }\n            methods.show();\n        }\n        // 计算类名\n        const classes = computed(() => [\n            'dropdown-service',\n            {\n                'dropdown-service-show': state.showFlag\n            }\n        ])\n        // 计算样式\n        const styles = computed(() => ({\n            top: `${state.top}px`,\n            left: `${state.left}px`\n        }))\n\n        // 将service绑定到实例上\n        Object.assign(ctx.proxy, { service });\n\n        // 点击block外的区域，则隐藏小弹窗\n        const onMousedownDocument = (e: MouseEvent) => {\n            if (!(el.value).contains(e.target as HTMLElement)) {\n                methods.hide();\n            }\n        }\n        onMounted(() => document.body.addEventListener('mousedown', onMousedownDocument, true))\n        onBeforeUnmount(() => document.body.removeEventListener('mousedown', onMousedownDocument, true))\n\n        // 父组件向子组件传递关闭方法\n        DropdownServiceProvider.provide({onClick: methods.hide});\n\n        return () => (\n            <div class={classes.value} style={styles.value} ref={el}>\n                {state.option.render()}\n            </div>\n        )\n    }\n\n})\n\nexport const DropdownOption = defineComponent({\n    props: {\n        label: { type: String },\n        icon: { type: String }\n    },\n    emits: {\n        click: (e: MouseEvent) => true\n    },\n    setup(props, ctx) {\n        // 子组件中调用关闭事件\n        const { onClick: dropdownClickHandler} = DropdownServiceProvider.inject();\n        const handler = {\n            onClick: (e: MouseEvent) => {\n                ctx.emit('click', e);\n                dropdownClickHandler();\n            }\n        }\n\n        return () => (\n            <div class=\"dropdown-option\" onClick={handler.onClick}>\n                <i class={`iconfont ${props.icon}`}></i>\n                <span>{props.label}</span>\n            </div>\n        )\n    }\n})\n\nexport const $$dropdown = (() => {\n    let instance: any;\n    return (option: DropdownServiceOption) => {\n        if (!instance) {\n            const el = document.createElement('div');\n            document.body.append(el);\n            const app = createApp(ServiceComponent, { option });\n            instance = app.mount(el);\n        }\n        instance.service(option);\n    }\n})();","import { defineComponent, PropType, computed, ref, reactive } from 'vue';\nimport {\n    VisualEditorModelValue,\n    VisualEditorConfig,\n    VisualEditorComponent,\n    createNewBlock,\n    VisualEditorBlockData,\n    VisualEditorMarkLines,\n    VisualDragProvider\n} from './Index.util';\nimport { useModel } from './utils/useModel';\nimport './Index.scss';\n\nimport VisualEditorBlock from './VisualEditorBlock';\nimport { VisualEditorOperator } from './VisualEditorOperator';\nimport { useVisualCommand } from './visual.command';\nimport { createEvent } from './plugins/event';\nimport { $$dialog } from './utils/dialog-service';\nimport { ElMessageBox, ElButton } from 'element-plus';\nimport { $$dropdown, DropdownOption } from './utils/dropdown-service';\n\n\nexport const VisualEditor = defineComponent({\n    components: {\n        VisualEditorBlock,\n        VisualEditorOperator\n    },\n    props: {\n        modelValue: {\n            type: Object as PropType<VisualEditorModelValue>,\n            required: true\n        },\n        // 配置都有哪些组件\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        formData: {\n            type: Object as PropType<Record<string, any>>,\n            required: true\n        },\n        customProps: {\n            type: Object as PropType<Record<string, any>>\n        }\n    },\n    emits: {\n        'update:modelValue': (val?: VisualEditorModelValue) => {\n            // console.log('update:ModelValue', val);\n            return true;\n        }\n    },\n    setup(props, ctx) {\n        // modelValue变为计算属性，监听改值操作，会触发emit\n        const dataModel = useModel(() => props.modelValue, val => ctx.emit('update:modelValue', val));\n        // console.log('dataModel :>> ', dataModel);\n        // ref获取画布元素\n        const containerRef = ref({} as HTMLDivElement);\n\n        // 当前选中操作的block(只保存一个，如果shift选择多个，则是最后一个)\n        let selectIndex = ref(-1);\n        const state = reactive({\n            selectBlock: computed(() => (dataModel.value.blocks || [])[selectIndex.value]),\n            preview: true, // 默认预览状态  预览-可输入  编辑-可拖拽\n            editFlag: true  // 当前是否开启了编辑器\n        })\n\n        // 外层样式，是否在编辑\n        const containerClasses = computed(() => [\n            'visual-editor',\n            {\n                'visual-editor-preview': state.preview\n            }\n        ]);\n\n        // 画布样式\n        // const { width, height } = dataModel.value.container;\n        const previewCanvasStyle = computed(() => ({\n            width: '100%',\n            height: '100%'\n        }))\n        const canvasStyle = computed(() => ({\n            width: `${dataModel.value.container.width}px`,\n            height: `${dataModel.value.container.height}px`\n        }))\n\n        // 方法\n        const methods = {\n            // 清除选中的block\n            clearFocus: (block?: VisualEditorBlockData) => {\n                let blocks = (dataModel.value.blocks || []);\n                if (!blocks.length) return;\n                if (!!blocks) {\n                    blocks = blocks.filter(item => item !== block);\n                }\n                blocks.forEach(block => block.focus = false);\n            },\n            // 更新block，渲染最新数据\n            updateBlocks: (blocks?: VisualEditorBlockData[]) => {\n                dataModel.value = {\n                    ...dataModel.value,\n                    blocks\n                }\n                console.log('dataModel.value :>> ', dataModel.value);\n            },\n            // 查看数据\n            showBlockData: (block: VisualEditorBlockData) => {\n                $$dialog.textarea(JSON.stringify(block), '节点数据', { editReadonly: true })\n            },\n            // 导入节点\n            importBlockData: async (block: VisualEditorBlockData) => {\n                const text = await $$dialog.textarea('', '请输入节点JSON字符串')\n                try {\n                    try {\n                        const data = JSON.parse(text || '');\n                        commander.updateBlock(data, block);\n                    } catch (e) {\n                        console.error(e);\n                        ElMessageBox.alert('解析JSON错误');\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            },\n            // 开启编辑组件\n            openEdit: () => {\n                state.editFlag = true;\n            }\n        }\n\n        // 订阅事件\n        const dragStart = createEvent();\n        const dragEnd = createEvent();\n        VisualDragProvider.provide({dragStart, dragEnd});\n        // 左侧菜单拖拽\n        const menuDraggier = (() => {\n            let dragComponent = null as null | VisualEditorComponent;\n            const containerHandler = {\n                // 鼠标设置为可放置状态\n                dragenter: (e: DragEvent) => { e.dataTransfer!.dropEffect = 'move'; },\n                dragover: (e: DragEvent) => { e.preventDefault(); },\n                // 鼠标设置为不可放置状态\n                dragleave: (e: DragEvent) => { e.dataTransfer!.dropEffect = 'none'; }\n            };\n            const blockHandler = {\n                dragstart: (e: DragEvent, component: VisualEditorComponent) => {\n                    // console.log('dragstart');\n                    containerRef.value.addEventListener('dragenter', containerHandler.dragenter);\n                    containerRef.value.addEventListener('dragover', containerHandler.dragover);\n                    containerRef.value.addEventListener('dragleave', containerHandler.dragleave);\n                    containerRef.value.addEventListener('drop', blockHandler.drop);\n                    dragComponent = component;\n                    dragStart.emit();\n                },\n                dragend: (e: DragEvent) => {\n                    // console.log('dragend');\n                    containerRef.value.removeEventListener('dragenter', containerHandler.dragenter);\n                    containerRef.value.removeEventListener('dragover', containerHandler.dragover);\n                    containerRef.value.removeEventListener('dragleave', containerHandler.dragleave);\n                    containerRef.value.removeEventListener('drop', blockHandler.drop);\n                    dragComponent = null;\n                },\n                drop: (e: DragEvent) => {\n                    // console.log('drop');\n                    const blocks = [...dataModel.value.blocks || []]; // 单独拷贝一份，不能直接用\n                    blocks.push(createNewBlock({\n                        component: dragComponent!,\n                        top: e.offsetY,\n                        left: e.offsetX\n                    }));\n                    methods.updateBlocks(blocks);\n                    dragEnd.emit();\n                }\n            };\n            return {\n                dragStart,\n                dragEnd,\n                blockHandler\n            }\n        })();\n\n\n        // 计算选中与未选中的block\n        const focusData = computed(() => {\n            let focus: VisualEditorBlockData[] = [];\n            let unFocus: VisualEditorBlockData[] = [];\n            (dataModel.value.blocks || []).forEach(block => (block.focus ? focus : unFocus).push(block))\n            return {\n                focus,\n                unFocus\n            }\n        })\n\n        // 工作区，聚焦\n        const focusHandler = {\n            container: {\n                onMousedown: (e: MouseEvent) => {\n                    // 点击的不是block元素，则忽略\n                    if (e.currentTarget !== e.target) return;\n                    e.preventDefault();\n                    // 如果是预览态，点击不生效\n                    if (state.preview) return;\n                    // 清除所有选中的block元素\n                    if (!e.shiftKey) {\n                        methods.clearFocus();\n                        selectIndex.value = -1;\n                    }\n                }\n            },\n            block: {\n                onMousedown: (e: MouseEvent, block: VisualEditorBlockData, index: number) => {\n                    // 如果是预览态，点击不生效\n                    if (state.preview) return;\n                    // 按下shift键\n                    if (e.shiftKey) {\n                        block.focus = !block.focus;\n                    } else {\n                        if (!block.focus) { // 多选拖拽\n                            block.focus = true;\n                            methods.clearFocus(block);\n                        }\n                    }\n                    selectIndex.value = index;\n                    // 记录当前位置\n                    blockDraggier.mousedown(e);\n                }\n            }\n        }\n        // 工作区拖拽\n        const blockDraggier = (() => {\n            const mark = reactive({\n                x: null as null | number,\n                y: null as null | number\n            })\n\n            let dragState = {\n                startX: 0,\n                startY: 0,\n                startLeft: 0,\n                startTop: 0,\n                startPos: [] as { left: number, top: number }[],\n                dragging: false, // 是否正在拖拽（move的时候才知道）\n                markLines: {} as VisualEditorMarkLines // {x:[{left:\"\", markX: ''}], y:[{top: \"\", markY: ''}]} 拖拽元素到达未聚焦元素的top时，引导线显示，引导线坐标为markY\n            }\n            const mousedown = (e: MouseEvent) => {\n                dragState = {\n                    startX: e.clientX, // 鼠标按下的开始位置\n                    startY: e.clientY,\n                    startLeft: state.selectBlock!.left, // 拖拽元素的初始位置\n                    startTop: state.selectBlock!.top,\n                    startPos: focusData.value.focus.map(({ top, left }) => ({ top, left })),\n                    dragging: false, // 是否正在拖拽\n                    markLines: (() => {\n                        const { focus, unFocus } = focusData.value;\n                        const { top, left, width, height } = state.selectBlock!;\n                        let lines: VisualEditorMarkLines = { x: [], y: [] };\n                        [...unFocus, { // 画布内元素对齐、画布对齐\n                            top: 0,\n                            left: 0,\n                            width: dataModel.value.container.width,\n                            height: dataModel.value.container.height\n                        }].forEach(block => {\n                            const { top: t, left: l, width: w, height: h } = block;\n                            lines.y.push({ top: t, markY: t }); // 拖拽元素顶部对齐其他元素顶部\n                            lines.y.push({ top: t + h, markY: t + h }); // 顶部对齐底部\n                            lines.y.push({ top: t + h / 2 - height / 2, markY: t + h / 2 }); // 中间对齐（垂直）\n                            lines.y.push({ top: t - height, markY: t }); // 底部对齐顶部\n                            lines.y.push({ top: t + h - height, markY: t + h }); // 底部对齐底部\n\n                            lines.x.push({ left: l, markX: l }); // 左侧对齐左侧\n                            lines.x.push({ left: l + w, markX: l + w }); // 左侧对齐右侧\n                            lines.x.push({ left: l + w / 2 - width / 2, markX: l + w / 2 }); // 中间对齐（水平）\n                            lines.x.push({ left: l - width, markX: l }); // 右侧对齐左侧\n                            lines.x.push({ left: l + w - width, markX: l + w }); // 右侧对齐右侧\n                        })\n                        return lines;\n                    })()\n                }\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', mouseup);\n            }\n            const mousemove = (e: MouseEvent) => {\n                // 修改拖拽标识\n                if (!dragState.dragging) {\n                    dragState.dragging = true;\n                    dragStart.emit();\n                }\n\n                // 获取当前鼠标的位置，以及鼠标按下时的初始位置，以及拖拽元素的offsetLeft和offsetTop\n                let { clientX: moveX, clientY: moveY } = e;\n                const { startX, startY, startLeft, startTop } = dragState; // 鼠标按下开始移动时候记录的点击位置\n\n                // 拖拽过程中如果按下shift键，则只允许一个方向移动\n                if (e.shiftKey) {\n                    if (Math.abs(moveX - startX) > Math.abs(moveY - startY)) {\n                        moveY = startY;\n                    } else {\n                        moveX = startX;\n                    }\n                }\n                // 当前拖拽元素距离左边和上面的距离（当前位置）\n                const currentLeft = startLeft + moveX - startX;\n                const currentTop = startTop + moveY - startY;\n\n                const currentMark = {\n                    x: null as null | number,\n                    y: null as null | number\n                };\n                for (let i = 0; i < dragState.markLines.y.length; i++) {\n                    const { top, markY } = dragState.markLines.y[i];\n                    if (Math.abs(top - currentTop) < 5) {\n                        moveY = top + startY - startTop;\n                        currentMark.y = markY;\n                        break;\n                    }\n                }\n                for (let i = 0; i < dragState.markLines.x.length; i++) {\n                    const { left, markX } = dragState.markLines.x[i];\n                    if (Math.abs(left - currentLeft) < 5) {\n                        moveX = left + startX - startLeft;\n                        currentMark.x = markX;\n                        break;\n                    }\n                }\n                mark.x = currentMark.x;\n                mark.y = currentMark.y;\n\n                // 修改拖拽元素的位置\n                const durX = moveX - startX;\n                const durY = moveY - startY;\n                focusData.value.focus.forEach((block, index) => {\n                    block.top = dragState.startPos[index].top + durY;\n                    block.left = dragState.startPos[index].left + durX;\n                })\n            }\n            const mouseup = (e: MouseEvent) => {\n                document.removeEventListener('mousemove', mousemove);\n                document.removeEventListener('mouseup', mouseup);\n                // 鼠标抬起，移除引导线\n                mark.x = null;\n                mark.y = null;\n                // 鼠标抬起，如果是拖拽状态，则触发更新\n                if (dragState.dragging) {\n                    dragEnd.emit();\n                }\n            }\n            return { mark, mousedown }\n        })();\n\n        // 其他事件处理，比如右键\n        const handler = {\n            onContextmenuBlock: (e: MouseEvent, block: VisualEditorBlockData) => {\n                // 如果是预览态，点击不生效\n                if (state.preview) return;\n                e.preventDefault();\n                e.stopPropagation();\n                $$dropdown({\n                    reference: e,\n                    render: () => <>\n                        <DropdownOption label=\"置顶节点\" icon=\"icon-place-top\" {...{ onClick: commander.placeTop }} />\n                        <DropdownOption label=\"置底节点\" icon=\"icon-place-bottom\" {...{ onClick: commander.placeBottom }} />\n                        <DropdownOption label=\"删除节点\" icon=\"icon-delete\" {...{ onClick: commander.delete }} />\n                        <DropdownOption label=\"查看数据\" icon=\"icon-browse\" {...{ onClick: () => methods.showBlockData(block) }} />\n                        <DropdownOption label=\"导入节点\" icon=\"icon-import\" {...{ onClick: () => methods.importBlockData(block) }} />\n                    </>\n                })\n            }\n        }\n\n        // 撤销重做功能\n        const commander = useVisualCommand({\n            focusData,\n            updateBlocks: methods.updateBlocks,\n            dataModel,\n            dragStart: menuDraggier.dragStart,\n            dragEnd: menuDraggier.dragEnd\n        });\n        const buttons = [\n            // 删除功能相关\n            { label: '撤销', icon: 'icon-back', handler: commander.undo, tip: 'ctrl+z' },\n            { label: '重做', icon: 'icon-forward', handler: commander.redo, tip: 'ctrl+y, ctrl+shift+z' },\n            {\n                label: () => state.preview ? '编辑' : '预览',\n                icon: () => state.preview ? 'icon-edit' : 'icon-browse',\n                handler: () => {\n                    methods.clearFocus();\n                    state.preview = !state.preview;\n                }\n            },\n            {\n                label: '导入', icon: 'icon-import', handler: async () => {\n                    const text = await $$dialog.textarea('', '请输入导入的JSON字符串');\n                    try {\n                        const data = JSON.parse(text || '');\n                        dataModel.value = data;\n                    } catch (e) {\n                        console.error(e);\n                        ElMessageBox.alert('解析JSON错误');\n                    }\n                }\n            },\n            { label: '导出', icon: 'icon-export', handler: () => $$dialog.textarea(JSON.stringify(dataModel.value), '导出的JSON数据', { editReadonly: true }) },\n            { label: '置顶', icon: 'icon-place-top', handler: () => commander.placeTop(), tip: 'ctrl+up' },\n            { label: '置底', icon: 'icon-place-bottom', handler: () => commander.placeBottom(), tip: 'ctrl+down' },\n            { label: '删除', icon: 'icon-back', handler: () => commander.delete(), tip: 'ctrl+d, backspace, delete' },\n            { label: '清空', icon: 'icon-reset', handler: () => commander.clear() },\n            {\n                label: '关闭', icon: 'icon-close', handler: () => {\n                    methods.clearFocus();\n                    state.editFlag = false;\n                    state.preview = true;\n                }\n            }\n        ]\n\n        return () => <>\n            {/* 预览 */}\n            <div class=\"visual-editor-mask\">\n                <div class={containerClasses.value}>\n                    <div class=\"visual-editor-body\">\n                        {/* header */}\n                        <div class=\"visual-editor-head\">\n                            <div class=\"visual-editor-head-button\" onClick={methods.openEdit}>去编辑</div>\n                        </div>\n                        <div class=\"visual-editor-content\">\n                            {/* 画布 */}\n                            <div class=\"visual-editor-canvas\"\n                                style={previewCanvasStyle.value}>\n                                {\n                                    (dataModel.value.blocks || []).map((block, index) => {\n                                        return <visual-editor-block\n                                            block={block}\n                                            config={props.config}\n                                            key={index}\n                                            formData={props.formData}\n                                            slots={ctx.slots}\n                                            customProps={props.customProps}\n                                        />\n                                    })\n                                }\n                                {blockDraggier.mark.y !== null && (\n                                    <div class=\"visual-editor-mark-line-y\" style={{ top: `${blockDraggier.mark.y}px` }}></div>\n                                )}\n                                {blockDraggier.mark.x !== null && (\n                                    <div class=\"visual-editor-mark-line-x\" style={{ left: `${blockDraggier.mark.x}px` }}></div>\n                                )}\n                                坐标---y:{blockDraggier.mark.y}---x:{blockDraggier.mark.x}\n                            </div>\n                        </div>\n                        <div>\n                            {JSON.stringify(props.formData)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            {/* 编辑 */}\n            <div class=\"visual-editor-mask\" v-show={state.editFlag}>\n                <div class={containerClasses.value}>\n                    {/* 左侧菜单 */}\n                    <div class=\"visual-editor-menu\">\n                        {\n                            props.config.componentList.map(component => (\n                                <div class=\"visual-editor-menu-item\"\n                                    draggable\n                                    onDragstart={(e) => menuDraggier.blockHandler.dragstart(e, component)}\n                                    onDrop={menuDraggier.blockHandler.drop}>\n                                    <span class=\"visual-editor-menu-item-label\">{component.label}</span>\n                                    {component.preview()}\n                                </div>\n                            ))\n                        }\n                    </div>\n                    <div class=\"visual-editor-body\">\n                        {/* header */}\n                        <div class=\"visual-editor-head\">\n                            {\n                                buttons.map((item, index) => {\n                                    const label = typeof item.label === 'function' ? item.label() : item.label;\n                                    // const icon = typeof item.icon === 'function' ? item.icon() : item.icon;\n                                    return <el-tooltip effect=\"dark\" content={item.tip || item.label} placement=\"bottom\" >\n                                        <div class=\"visual-editor-head-button\" key={index} onClick={item.handler}>{label}</div>\n                                    </el-tooltip>\n                                })\n                            }\n                        </div>\n                        <div class=\"visual-editor-content\">\n                            {/* 画布 */}\n                            <div class=\"visual-editor-canvas\"\n                                style={canvasStyle.value}\n                                ref={containerRef}\n                                {...focusHandler.container}>\n                                <div>\n                                    <div>width: {dataModel.value.container.width}</div>\n                                    <div>height: {dataModel.value.container.height}</div>\n                                    <div>blocks: {JSON.stringify(dataModel.value.blocks)}</div>\n                                </div>\n                                {\n                                    (dataModel.value.blocks || []).map((block, index) => {\n                                        return <visual-editor-block\n                                            block={block}\n                                            config={props.config}\n                                            key={index}\n                                            formData={props.formData}\n                                            slots={ctx.slots}\n                                            customProps={props.customProps}\n                                            {...{\n                                                onMousedown: (e: MouseEvent) => focusHandler.block.onMousedown(e, block, index),\n                                                onContextmenu: (e: MouseEvent) => handler.onContextmenuBlock(e, block)\n                                            }}\n                                        />\n                                    })\n                                }\n                                {blockDraggier.mark.y !== null && (\n                                    <div class=\"visual-editor-mark-line-y\" style={{ top: `${blockDraggier.mark.y}px` }}></div>\n                                )}\n                                {blockDraggier.mark.x !== null && (\n                                    <div class=\"visual-editor-mark-line-x\" style={{ left: `${blockDraggier.mark.x}px` }}></div>\n                                )}\n                                坐标---y:{blockDraggier.mark.y}---x:{blockDraggier.mark.x}\n                            </div>\n                        </div>\n                    </div>\n                    <visual-editor-operator\n                        block={state.selectBlock}\n                        config={props.config}\n                        dataModel={dataModel}\n                        updateBlock={commander.updateBlock}\n                        updateModelValue={commander.updateModuleValue}\n                    />\n                </div>\n            </div>\n        </>\n    }\n})","import { defineComponent } from 'vue';\nimport { useModel } from '@/packages/utils/useModel';\nimport './NumberRange.scss';\n\nexport const NumberRange = defineComponent({\n    props: {\n        start: {\n            type: String\n        },\n        end: {\n            type: String\n        }\n    },\n    emits: {\n        'update:start': (val?: string) => true,\n        'update:end': (val?: string) => true\n    },\n    setup(props, ctx) {\n        const startModel = useModel(() => props.start, val => ctx.emit('update:start', val));\n        const endModel = useModel(() => props.end, val => ctx.emit('update:end', val));\n\n        return () => (\n            <div class=\"number-range\">\n                <input type=\"text\" v-model={startModel.value} />\n                <span>-</span>\n                <input type=\"text\" v-model={endModel.value} />\n            </div>\n        )\n    }\n})","import { createVisualEditorConfig } from './Index.util';\nimport { ElButton, ElInput, ElOption, ElSelect } from 'element-plus';\nimport { createEditorColorProp, createEditorInputProp, createEditorSelectProp, createEditorTableProp } from './VisualEditorProps';\nimport { NumberRange } from './components/number-range/NumberRange';\nimport { propsToAttrMap } from '@vue/shared';\n\nexport const visualConfig = createVisualEditorConfig();\n\nvisualConfig.registry('text', {\n    label: '文本',\n    preview: () => '预览文本',\n    render: ({ props }) => <span style={{ color: props.color, fontSize: props.size }}>{props.text || '默认文本'}</span>,\n    props: {\n        text: createEditorInputProp('显示文本'),\n        color: createEditorColorProp('字体颜色'),\n        size: createEditorSelectProp('字体大小', [\n            { label: '14px', val: '14px' },\n            { label: '18px', val: '18px' },\n            { label: '24px', val: '24px' }\n        ])\n    }\n});\n\nvisualConfig.registry('button', {\n    label: '按钮',\n    preview: () => <ElButton>按钮</ElButton>,\n    render: ({ props, size, custom }) => (\n        // width height 这么写的原因是：直接用size.width，拖拽改变宽高，然后撤回的时候，没有响应式变化\n        <ElButton\n            {...custom}\n            type={props.type}\n            size={props.size}\n            style={{\n                width: !!size.width ? `${size.width}px` : null,\n                height: !!size.height ? `${size.height}px` : null\n            }}\n        >\n            {props.text || '默认按钮'}\n        </ElButton>\n    ),\n    props: {\n        text: createEditorInputProp('显示文本'),\n        type: createEditorSelectProp('按钮类型', [\n            { label: '基础', val: 'primary' },\n            { label: '成功', val: 'success' },\n            { label: '警告', val: 'warning' },\n            { label: '危险', val: 'danger' },\n            { label: '提示', val: 'info' },\n            { label: '文本', val: 'text' }\n        ]),\n        size: createEditorSelectProp('按钮大小', [\n            { label: '默认', val: '' },\n            { label: '中等', val: 'medium' },\n            { label: '小', val: 'small' },\n            { label: '极小', val: 'mini' }\n        ])\n    },\n    resize: {\n        width: true,\n        height: true\n    }\n});\n\nvisualConfig.registry('select', {\n    label: '下拉框',\n    preview: () => <ElSelect />,\n    render: ({ props, model, custom }) => (\n        <ElSelect\n            {...custom}\n            key={(props.options || []).map((opt: any) => opt.value).join(',')}\n            {...model.default}\n        >\n            {\n                (props.options || []).map((opt: { label: string, value: string }, index: number) => (\n                    <ElOption label={opt.label} value={opt.value} key={index} />\n                ))\n            }\n        </ElSelect>\n    ),\n    props: {\n        options: createEditorTableProp('下拉选项', {\n            options: [\n                { label: '显示值', field: 'label' },\n                { label: '绑定值', field: 'value' },\n                { label: '备注', field: 'comments' }\n            ],\n            showKey: 'label'\n        })\n    },\n    model: {\n        default: '绑定字段'\n    }\n})\n\nvisualConfig.registry('input', {\n    label: '输入框',\n    preview: () => <ElInput modelValue={\"\"} />,\n    render: ({ model, size, custom }) => <ElInput\n        {...custom}\n        {...model.default}\n        style={{ \n            width: !!size.width ? `${size.width}px` : null,\n        }} />,\n    model: {\n        default: '绑定字段'\n    },\n    resize: {\n        width: true\n    }\n});\n\n\nvisualConfig.registry('number-range', {\n    label: '数字范围输入框',\n    preview: () => <NumberRange />,\n    render: ({ model, size }) => <NumberRange\n        style={{ width: `${size.width}px` }}\n        {...{\n            start: model.start.value,\n            'onUpdate:start': model.start.onChange,\n            end: model.end.value,\n            'onUpdate:end': model.end.onChange,\n        }}\n    />,\n    model: {\n        start: '起始绑定字段',\n        end: '结束绑定字段'\n    },\n    resize: {\n        width: true\n    }\n});\n\nvisualConfig.registry('image', {\n    label: '图片',\n    preview: () => <img alt=\"图片alt\" />,\n    render: ({ props, size }) => (\n        <div\n            style={{ height: `${size.height || 200}px`, width: `${size.width || 200}px` }}\n            class=\"visual-block-img\">\n            <img src={props.url || 'http://cn.vuejs.org/images/logo.png'} />\n        </div>\n    ),\n    props: {\n        url: createEditorInputProp('地址')\n    },\n    resize: {\n        width: true,\n        height: true\n    }\n});\n","\nimport { defineComponent } from \"vue\";\nimport { VisualEditor } from \"./packages/Index\";\nimport { visualConfig } from \"./packages/VisualEditorConfig\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    VisualEditor\n  },\n  data() {\n    return {\n      val: \"111\",\n      formData: {\n        username: \"admin\"\n      },\n      // 左侧配置组件\n      config: visualConfig,\n      // 工作区\n      jsonData: {\n        container: {\n          width: 1000,\n          height: 1000\n        },\n        blocks: []\n      },\n      customProps: {\n        subBtn: { // subBtn是组件标识\n          onClick: () => {\n            this.$notify({ message: \"执行表单数据校验以及添加到服务器的动作\" });\n          }\n        },\n        mySelect: {\n          onChange: (val: any) => {\n            this.$notify({ message: `下拉框发生变化，${val}` });\n          }\n        }\n      }\n    };\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=ab247e88\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=ab247e88&lang=scss\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue';\nimport '@/assets/styles/index.scss';\nimport App from './App.vue';\nimport ElementPlus from 'element-plus';\nimport 'element-plus/lib/theme-chalk/index.css';\n\nconst app = createApp(App)\napp.use(ElementPlus);\napp.mount('#app')\n"],"sourceRoot":""}