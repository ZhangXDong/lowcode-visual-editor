{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?b530","webpack:///./src/App.vue","webpack:///./src/packages/components/import-export-dialog/Index.utils.ts","webpack:///./src/packages/components/block-resize/Index.tsx","webpack:///./src/packages/utils/defer.ts","webpack:///./src/packages/components/import-export-dialog/Index.tsx","webpack:///./src/packages/components/visual-editor-header/Index.tsx","webpack:///./src/packages/Index.utils.ts","webpack:///./src/packages/components/visual-editor-menu/Index.tsx","webpack:///./src/packages/components/visual-editor-block/Index.tsx","webpack:///./src/packages/components/dropdown/Index.utils.ts","webpack:///./src/packages/components/dropdown/Dropdown.tsx","webpack:///./src/packages/components/dropdown/DropdownOption.tsx","webpack:///./src/packages/components/visual-editor-block/Index.utils.ts","webpack:///./src/packages/components/visual-editor-content/Index.tsx","webpack:///./src/packages/components/visual-editor-props/Index.utils.ts","webpack:///./src/packages/components/table-prop-editor/TablePropEditorDialog.tsx","webpack:///./src/packages/plugins/useModel.tsx","webpack:///./src/packages/components/table-prop-editor/TablePropEditor.tsx","webpack:///./src/packages/components/visual-editor-props/Index.tsx","webpack:///./src/packages/utils/keyboard-code.ts","webpack:///./src/packages/plugins/command/Command.plugin.ts","webpack:///./src/packages/plugins/command/VisualCommand.ts","webpack:///./src/packages/utils/event.ts","webpack:///./src/packages/Index.tsx","webpack:///./src/packages/components/visual-editor-menu/Index.utils.ts","webpack:///./src/packages/components/number-range/Index.tsx","webpack:///./src/packages/components/visual-editor-menu/VisualEditorConfig.tsx","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","id","jsonData","config","formData","customProps","myBtn","food","DialogServiceEditType","Direction","keyGenerator","count","defer","dfd","promise","Promise","resolve","reject","ServiceComponent","props","option","type","required","setup","ctx","state","editValue","showFlag","methods","service","show","hide","handler","onConfirm","onCancel","assign","proxy","title","default","editType","textarea","row","footer","onClick","DialogService","instance","el","document","createElement","body","appendChild","app","mount","$$dialog","input","initValue","opt","VisualEditorHeader","dataModel","commander","emits","updateDataModel","modelValue","emit","clearFocus","blocks","changePreviewState","isPreview","buttons","label","icon","undo","tip","redo","preview","text","JSON","parse","e","console","error","alert","stringify","editReadonly","placeTop","placeBottom","delete","clear","map","buttonList","buttonListIndex","button","index","VisualDragProvider","VISUAL_DRAG_PROVIDER","provide","inject","VisualEventBusProvider","VISUAL_EVENTBUS_PROVIDER","VisualEditorMenu","componentList","Array","eventBus","menuDraggier","blockHandler","dragstart","component","BlockResize","block","resize","width","height","dragStart","dragEnd","startX","startY","startWidth","startHeight","startLeft","startTop","direction","horizontal","start","vertical","dragging","mousedown","stopPropagation","clientX","clientY","left","top","addEventListener","mousemove","mouseup","moveX","moveY","center","durX","durY","hasResize","removeEventListener","end","VisualEditorBlock","slots","log","slotName","blockEl","adjustPosition","offsetWidth","offsetHeight","blockStyle","zIndex","classes","focus","renderContent","dragComp","componentMap","componentKey","render","size","model","keys","reduce","prev","propName","modelName","val","custom","DropdownProvider","DROPDOWN_PROVIDER","dropdownRef","mounted","setTimeout","evt","getBoundingClientRect","styles","onMousedownDocument","contains","target","$$dropdown","append","String","click","dropdownClickHandler","createNewBlock","VisualEditorPropsType","VisualEditorContent","components","container","focusData","containerRef","canvasStyle","updateBlocks","resetSelectIndex","showBlockData","importBlockData","dragComponent","containerHandler","dragenter","dataTransfer","dropEffect","dragover","preventDefault","dragleave","drop","offsetY","offsetX","on","focusHandler","onMousedown","currentTarget","shiftKey","blockDraggier","mark","x","y","dragState","startPos","markLines","selectBlock","unFocus","lines","forEach","w","h","markY","markX","Math","abs","currentLeft","currentTop","currentMark","onContextmenuBlock","onContextmenu","createEditorInputProp","createEditorColorProp","color","createEditorSelectProp","options","select","createEditorTableProp","table","editData","add","reset","onDelete","item","field","$index","$$TablePropEditorDialog","useModel","emitter","TablePropEditor","propConfig","showKey","VisualEditorProps","immediate","newBlock","renderEditor","content","entries","moduleName","step","KeyboardCode","16","17","18","8","9","13","27","32","37","38","39","40","46","189","187","48","49","50","51","52","53","54","55","56","57","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","112","113","114","115","116","117","118","119","120","121","122","123","useCommander","current","queue","commands","commandArray","destroyList","register","command","execute","followQueue","init","keyboardEvent","onKeydown","activeElement","keyCode","altKey","ctrlKey","metaKey","keyString","keyNames","join","keyboard","isArray","indexOf","registerRedoUndo","queueItem","fn","useVisualCommand","before","after","this","dragend","drag","off","maxZIndex","max","minZIndex","min","Infinity","dur","createEvent","listeners","cb","param","VisualEditor","selectIndex","editFlag","publicMethods","filter","updateBlock","oldBlock","oldBlocks","createVisualEditorConfig","registry","componentOptions","comp","NumberRange","startModel","endModel","VisualConfig","fontSize","onChange","url","$notify","message","mySelect","App","use"],"mappings":"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","file":"js/app.7e74de90.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=36aa04f0&lang=scss\"","<template>\n  <div id=\"app\">\n    <visual-editor v-model=\"jsonData\" :config=\"config\" :formData=\"formData\" :customProps=\"customProps\">\n      <!-- 给一个按钮添加组件标识myBtn，给一个下拉框绑定字段为food -->\n      <template #myBtn>\n        <el-button v-if=\"formData.food === 'dangao'\">自定义按钮</el-button>\n        <el-tag v-else>自定义标签</el-tag>\n      </template>\n    </visual-editor>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport VisualEditor from \"./packages/Index\";\nimport { VisualConfig } from \"./packages/components/visual-editor-menu/VisualEditorConfig\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    VisualEditor\n  },\n  data() {\n    return {\n      // 展示数据\n      jsonData: {\n        container: {\n          width: 1000,\n          height: 1000\n        },\n        blocks: []\n      },\n      // 配置数据\n      config: VisualConfig,\n      // 绑定的数据\n      formData: {},\n      // 自定义属性\n      customProps: {\n        myBtn: { // myBtn是组件标识，即slotName\n          onClick: () => {\n            this.$notify({ message: \"执行表单数据校验以及添加到服务器的动作\" });\n          }\n        },\n        mySelect: {\n          onChange: (val: any) => {\n            this.$notify({ message: `下拉框发生变化，${val}` });\n          }\n        }\n      }\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\">\n#app {\n  @include wh100;\n}\n</style>\n","// 弹窗内部展示的组件类型，文本域或输入框\nexport enum DialogServiceEditType {\n    textarea = 'textarea',\n    input = 'input'\n}\n\n// 为了每次展示弹窗都是最新的内容，所以加了key\nexport const keyGenerator = (() => {\n    let count = 0;\n    return () => `auto_key_${count++}`;\n})()","import { defineComponent, PropType } from 'vue';\nimport './Index.scss';\n// 类型声明\nimport { VisualEditorBlockData } from '../visual-editor-block/Index.d';\nimport { VisualEditorComponent } from '../visual-editor-menu/Index.d';\n\n// provide\nimport { VisualDragProvider } from '../../Index.utils';\n\nenum Direction {\n    start = 'start',\n    center = \"center\",\n    end = \"end\"\n}\n\n\nexport const BlockResize = defineComponent({\n    props: {\n        block: {\n            type: Object as PropType<VisualEditorBlockData>,\n            required: true\n        },\n        component: {\n            type: Object as PropType<VisualEditorComponent>,\n            required: true\n        }\n    },\n    setup(props) {\n        return () => {\n            const { width, height } = props.component.resize || {};\n\n            const { dragStart, dragEnd } = VisualDragProvider.inject();\n\n            const onMousedown = (() => {\n                let data = {\n                    startX: 0,\n                    startY: 0,\n                    startWidth: 0,\n                    startHeight: 0,\n                    startLeft: 0,\n                    startTop: 0,\n                    direction: {\n                        horizontal: Direction.start,\n                        vertical: Direction.start\n                    },\n                    dragging: false, // 是否正在拖拽\n                }\n\n                const mousedown = (e: MouseEvent, direction: { horizontal: Direction, vertical: Direction }) => {\n                    e.stopPropagation(); // 拖拽的时候也调了mousedown方法（会导致一边改变大小，一边拖拽）\n                    data = {\n                        startX: e.clientX,\n                        startY: e.clientY,\n                        startWidth: props.block.width,\n                        startHeight: props.block.height,\n                        startLeft: props.block.left,\n                        startTop: props.block.top,\n                        direction,\n                        dragging: false\n                    }\n                    document.addEventListener('mousemove', mousemove);\n                    document.addEventListener('mouseup', mouseup);\n                }\n\n                const mousemove = (e: MouseEvent) => {\n                    let { startX, startY, startWidth, startHeight, startLeft, startTop, direction, dragging } = data;\n                    let { clientX: moveX, clientY: moveY } = e;\n\n                    // 修改拖拽状态\n                    if (!dragging) {\n                        data.dragging = true;\n                        dragStart.emit();\n                    }\n\n                    // 纵向拖拽-拖拽的是上、下的中间，则不允许向左右扩展宽度\n                    if (direction.horizontal === Direction.center) {\n                        moveX = startX\n                    }\n                    // 横向拖拽-拖拽的是左、右的中间，则不允许向上下扩展宽度\n                    if (direction.vertical === Direction.center) {\n                        moveY = startY\n                    }\n\n                    let durX = moveX - startX;\n                    let durY = moveY - startY;\n                    const block = props.block as VisualEditorBlockData;\n                    // 如果拖拽的是左上角，则不需要改变尺寸\n                    if (direction.vertical === Direction.start) {\n                        durY = -durY;\n                        block.top = startTop - durY;\n                    }\n                    if (direction.horizontal === Direction.start) {\n                        durX = -durX;\n                        block.left = startLeft - durX;\n                    }\n\n                    const width = startWidth + durX;\n                    const height = startHeight + durY;\n                    block.width = width;\n                    block.height = height;\n                    block.hasResize = true;\n\n                }\n\n                const mouseup = () => {\n                    document.removeEventListener('mousemove', mousemove);\n                    document.removeEventListener('mouseup', mouseup);\n                    // 修改拖拽状态\n                    if (data.dragging) {\n                        data.dragging = false;\n                        dragEnd.emit();\n                    }\n                }\n\n                return mousedown;\n            })()\n\n            return <>\n                {!!height && <>\n                    <div class=\"block-resize block-resize-top\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.center,\n                            vertical: Direction.start\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-bottom\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.center,\n                            vertical: Direction.end\n                        })}>\n                    </div>\n                </>}\n                {!!width && <>\n                    <div class=\"block-resize block-resize-left\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.start,\n                            vertical: Direction.center\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-right\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.end,\n                            vertical: Direction.center\n                        })}>\n                    </div>\n                </>}\n                {!!width && !!height && <>\n                    <div class=\"block-resize block-resize-top-left\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.start,\n                            vertical: Direction.start\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-top-right\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.end,\n                            vertical: Direction.start\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-bottom-left\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.start,\n                            vertical: Direction.end\n                        })}>\n                    </div>\n                    <div class=\"block-resize block-resize-bottom-right\"\n                        onMousedown={e => onMousedown(e, {\n                            horizontal: Direction.end,\n                            vertical: Direction.end\n                        })}>\n                    </div>\n                </>}\n            </>\n        }\n    }\n\n})","interface Defer {\n    (): {\n        resolve: () => void,\n        reject: () => void,\n        promise: Promise<void>\n    },\n    <T>(): {\n        resolve: (val: T) => void,\n        reject: () => void,\n        promise: Promise<T>\n    }\n}\n\nexport const defer: Defer = () => {\n    const dfd = {} as any;\n    dfd.promise = new Promise((resolve, reject) => {\n        dfd.resolve = resolve as any;\n        dfd.reject = reject;\n    })\n    return dfd;\n}\n","// 导入导出弹窗\nimport { createApp, defineComponent, getCurrentInstance, PropType, reactive } from \"vue\";\nimport { ElInput, ElDialog, ElButton } from 'element-plus';\n// 类型声明\nimport { DialogServiceOption } from './Index.d';\n// 工具函数\nimport { DialogServiceEditType, keyGenerator } from './Index.utils';\nimport { defer } from \"../../utils/defer\";\n\nconst ServiceComponent = defineComponent({\n    props: {\n        option: { type: Object as PropType<DialogServiceOption>, required: true }\n    },\n    setup(props) {\n        // 获取当前实例\n        const ctx = getCurrentInstance()!;\n        // 响应式变量\n        const state = reactive({\n            option: props.option,\n            editValue: null as undefined | null | string,\n            showFlag: false,\n            key: keyGenerator()\n        });\n\n        const methods = {\n            service: (option: DialogServiceOption) => {\n                state.option = option;\n                state.editValue = option.editValue;\n                state.key = keyGenerator();\n                methods.show();\n            },\n            show: () => {\n                state.showFlag = true;\n            },\n            hide: () => {\n                state.showFlag = false;\n            }\n        }\n\n        const handler = {\n            onConfirm: () => {\n                state.option.onConfirm(state.editValue); // 执行promise的resolve\n                methods.hide();\n            },\n            onCancel: () => {\n                methods.hide();\n            }\n        }\n\n        // 将methods绑定到实例上（否则访问不到）\n        Object.assign(ctx.proxy, methods);\n\n        return () => (\n            // @ts-ignore\n            <ElDialog v-model={state.showFlag} title={state.option.title} key={state.key}>\n                {{\n                    default: () => (\n                        <div>\n                            {\n                                state.option.editType === DialogServiceEditType.textarea\n                                ? ( <ElInput type=\"textarea\" {...{ row: 20 }} v-model={state.editValue} /> )\n                                : (<ElInput v-model={state.editValue} /> )\n                            }\n                        </div>\n                    ),\n                    footer: () => (\n                        <div>\n                            <ElButton {...{ onClick: handler.onCancel } as any}>取消</ElButton>\n                            <ElButton {...{ onClick: handler.onConfirm } as any}>确定</ElButton>\n                        </div>\n                    )\n                }}\n            </ElDialog>\n        )\n    }\n})\n\n// 创建组件并挂在到DOM上\nconst DialogService = (() => {\n    let instance: any;\n    return (option: DialogServiceOption) => {\n        if (!instance) {\n            const el = document.createElement('div');\n            document.body.appendChild(el);\n            const app = createApp(ServiceComponent, { option });\n            instance = app.mount(el);\n        }\n        instance.service(option);\n    }\n})()\n\n// 将对象合并到DialogService函数的原型上\nconst $$dialog = Object.assign(DialogService, {\n    input: (initValue?: string, title?: string, option?: Omit<DialogServiceOption, 'editType' | 'onConfirm'>) => {\n        const dfd = defer<string | null | undefined>();\n        const opt: DialogServiceOption = {\n            ...option,\n            editType: DialogServiceEditType.input,\n            editValue: initValue,\n            onConfirm: dfd.resolve,\n            title\n        };\n        DialogService(opt);\n        return dfd.promise;\n    },\n    textarea: (initValue?: string, title?: string, option?: Omit<DialogServiceOption, 'editType' | 'onConfirm'>) => {\n        const dfd = defer<string | null | undefined>();\n        const opt: DialogServiceOption = {\n            ...option,\n            editType: DialogServiceEditType.textarea,\n            editValue: initValue,\n            onConfirm: dfd.resolve,\n            title\n        };\n        DialogService(opt);\n        return dfd.promise;\n    }\n})\n\nexport default $$dialog;\n","import { defineComponent, PropType } from \"vue\";\nimport './Index.scss';\n// 类型声明\nimport { VisualEditorModelValue, VisualEditorFocusData, VisualEditorState } from '../../Index.d';\nimport { VisualEditorBlockData } from '../visual-editor-block/Index.d';\n// 组件\nimport $$dialog from '../import-export-dialog/Index';\nimport { ElMessageBox } from 'element-plus';\n\nconst VisualEditorHeader = defineComponent({\n    props: {\n        // 主数据\n        dataModel: {\n            type: Object as PropType<{ value: VisualEditorModelValue }>,\n            required: true\n        },\n        // 公共状态\n        state: {\n            type: Object as PropType<VisualEditorState>,\n            required: true\n        },\n        // 操作方法\n        commander: {\n            type: Object as any,\n            required: true\n        }\n    },\n    emits: [\n        'updateDataModel',\n        'clearFocus',\n        'changePreviewState'\n    ],\n    setup(props, ctx) {\n        // 公共方法\n        const methods = {\n            // 更新dataModel\n            updateDataModel: (modelValue: VisualEditorModelValue) => {\n                ctx.emit('updateDataModel', modelValue);\n            },\n            // 清除focus\n            clearFocus: (blocks?: VisualEditorBlockData[]) => {\n                ctx.emit('clearFocus', blocks);\n            },\n            // 修改preview状态\n            changePreviewState: (isPreview: boolean) => {\n                ctx.emit('changePreviewState', isPreview);\n            }\n        };\n        const buttons: any = [\n            [\n                { label: '撤销', icon: 'el-icon-refresh-left', handler: props.commander.undo, tip: 'ctrl+z' },\n                { label: '重做', icon: 'el-icon-refresh-right', handler: props.commander.redo, tip: 'ctrl+y, ctrl+shift+z' },\n                {\n                    label: () => props.state.preview ? '编辑' : '预览',\n                    icon: () => props.state.preview ? 'el-icon-edit' : 'el-icon-view',\n                    handler: () => {\n                        methods.clearFocus();\n                        methods.changePreviewState(!props.state.preview); // 切换预览或编辑状态\n                    }\n                }\n            ],\n            [\n                {\n                    label: '导入', icon: 'el-icon-upload2', handler: async () => {\n                        const text = await $$dialog.textarea('', '请输入导入的JSON字符串');\n                        try {\n                            const data = JSON.parse(text || '');\n                            methods.updateDataModel(data);\n                        } catch (e) {\n                            console.error(e);\n                            ElMessageBox.alert('解析JSON错误');\n                        }\n                    }\n                },\n                {\n                    label: '导出', icon: 'el-icon-download', handler: async () => $$dialog.textarea(JSON.stringify(props.dataModel.value), '导出的JSON数据', { editReadonly: true })\n                }\n            ],\n            [\n                { label: '置顶', icon: 'el-icon-top', handler: () => props.commander.placeTop(), tip: 'ctrl+up' },\n                { label: '置底', icon: 'el-icon-bottom', handler: () => props.commander.placeBottom(), tip: 'ctrl+down' },\n                { label: '删除', icon: 'el-icon-delete', handler: () => props.commander.delete(), tip: 'ctrl+d, backspace, delete' },\n                { label: '清空', icon: 'el-icon-scissors', handler: () => props.commander.clear() }\n            ]\n        ]\n\n        return () => <>\n            <header class=\"visual-editor-header\">\n                <div class=\"visual-editor-header-wrap\">\n                    Vue3-Visual-Editor\n                </div>\n                {\n                    buttons.map((buttonList: any, buttonListIndex: number) => (\n                        <div class=\"visual-editor-header-wrap\" key={`buttonList` + buttonListIndex}>\n                            {\n                                buttonList.map((button: any, index: number) => {\n                                    const label = typeof button.label === 'function' ? button.label() : button.label;\n                                    const icon = typeof button.icon === 'function' ? button.icon() : button.icon;\n                                    return <div class=\"button\" key={'button' + index} onClick={ button.handler }>\n                                        <i class={ icon }></i>\n                                        <p class=\"button-text\">{ label }</p>\n                                    </div>\n                                })\n                            }\n                        </div>\n                    ))\n                }\n            </header>\n        </>\n    }\n})\n\nexport default VisualEditorHeader;\n","import { provide, inject } from 'vue';\nimport { VisualDragEvent, VisualEventBus } from './Index.d';\n\n// 用于拖拽的 provide inject\nexport const VisualDragProvider = (() => {\n    const VISUAL_DRAG_PROVIDER = '@@VISUAL_DRAG_PROVIDER';\n    return {\n        provide: (data: VisualDragEvent) => {\n            provide(VISUAL_DRAG_PROVIDER, data);\n        },\n        inject: () => {\n            return inject(VISUAL_DRAG_PROVIDER) as VisualDragEvent;\n        }\n    }\n})();\n\n// 用于左侧菜单组件和容器组件通信的 provide inject\nexport const VisualEventBusProvider = (() => {\n    const VISUAL_EVENTBUS_PROVIDER = '@@VISUAL_EVENTBUS_PROVIDER';\n    return {\n        provide: (data: VisualEventBus) => {\n            provide(VISUAL_EVENTBUS_PROVIDER, data);\n        },\n        inject: () => {\n            return inject(VISUAL_EVENTBUS_PROVIDER) as VisualEventBus;\n        }\n    }\n})();\n","import { defineComponent, PropType, getCurrentInstance } from \"vue\";\nimport './Index.scss';\n// 类型声明\nimport { VisualEditorComponent } from './Index.d';\n\n// provide, inject\nimport { VisualEventBusProvider } from '../../Index.utils';\n\n// 左侧渲染的是注册好的组件\nconst VisualEditorMenu = defineComponent({\n    props: {\n        componentList: {\n            type: Array as PropType<VisualEditorComponent[]>,\n            required: true\n        }\n    },\n    setup(props) {\n        const { eventBus } = VisualEventBusProvider.inject();\n\n        // 左侧菜单拖拽\n        const menuDraggier = (() => {\n            const blockHandler = {\n                dragstart: (e: DragEvent, component: VisualEditorComponent) => {\n                    // console.log('dragstart');\n                    eventBus.emit(component);\n                    // dragStart.emit();\n                }\n            };\n            return {\n                // dragStart,\n                // dragEnd,\n                blockHandler\n            }\n        })();\n\n\n        return () => <>\n            <div class=\"visual-editor-menu\">\n                <h3>基础组件</h3>\n                <section class=\"visual-editor-menu-content\">\n                    {\n                        (props.componentList || []).map(component => (\n                            <div class=\"visual-editor-menu-item\"\n                                draggable\n                                onDragstart={(e) => menuDraggier.blockHandler.dragstart(e, component)}\n                            >\n                                <div class=\"visual-editor-menu-item-comp\">\n                                    { component.preview() }\n                                </div>\n                                <div class=\"visual-editor-menu-item-text\">\n                                    { component.label }\n                                </div>\n                            </div>\n                        ))\n                    }\n                </section>\n            </div>\n        </>\n    }\n})\n\nexport default VisualEditorMenu;\n","import { defineComponent, PropType, Slot, ref, onMounted, computed } from \"vue\";\nimport './Index.scss';\n// 类型声明\nimport { VisualEditorBlockData } from './Index.d';\nimport { VisualEditorConfig } from '../visual-editor-menu/Index.d';\n// 组件\nimport { BlockResize } from '../block-resize/Index';\n\nconst VisualEditorBlock = defineComponent({\n    props: {\n        block: {\n            type: Object as PropType<VisualEditorBlockData>,\n            required: true\n        },\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        formData: {\n            type: Object as PropType<Record<string, any>>,\n            required: true\n        },\n        slots: {\n            type: Object as PropType<Record<string, Slot | undefined>>,\n            required: true\n        },\n        customProps: {\n            type: Object as PropType<Record<string, any>>\n        }\n    },\n    setup(props, ctx) {\n        console.log(333444, props.block.slotName, props.slots);\n        // 鼠标抬起，元素以鼠标位置为中心居中\n        const blockEl = ref({} as HTMLDivElement);\n        onMounted(() => {\n            const block = props.block;\n            if (block.adjustPosition) {\n                const { offsetWidth, offsetHeight } = blockEl.value;\n                block.left = block.left - offsetWidth / 2;\n                block.top = block.top - offsetHeight / 2;\n                block.width = offsetWidth;\n                block.height = offsetHeight;\n                block.adjustPosition = false; // 已经放到了画布，设置为false\n            }\n        });\n        // 样式\n        const blockStyle = computed(() => ({\n            left: `${props.block.left}px`,\n            top: `${props.block.top}px`,\n            zIndex: props.block.zIndex\n        }));\n        const classes = computed(() => ([\n            'visual-editor-block',\n            {\n                'visual-editor-block-focus': props.block.focus\n            }\n        ]))\n\n        return () => {\n            // 渲染\n            const dragComp = props.config.componentMap[props.block.componentKey];\n            const formData = props.formData as Record<string, any>;\n            let renderContent: any;\n            // 有自定义slot，则渲染slot的数据\n            if (!!props.block.slotName && !!props.slots[props.block.slotName]) {\n                renderContent = props.slots[props.block.slotName]!(); // 执行渲染函数renderFnWithContext，得到Vitual-DOM\n            } else {\n                renderContent = dragComp.render({\n                    props: props.block.props || {},\n                    size: props.block.hasResize ? {\n                        width: props.block.width,\n                        height: props.block.height\n                    } : {},\n                    model: Object.keys(dragComp.model || {}).reduce((prev, propName) => {\n                        const modelName = props.block.model ? props.block.model[propName] : null;\n                        prev[propName] = {\n                            [propName === 'default' ? 'modelValue' : propName]: !!modelName ? formData[modelName] : null,\n                            [propName === 'default' ? 'onUpdate:modelValue' : 'onChange']: (val: any) => {\n                                !!modelName && (formData[modelName] = val);\n                            }\n                        }\n                        return prev;\n                    }, {} as Record<string, any>),\n                    custom: (!props.block.slotName || !props.customProps) ? {} : (props.customProps[props.block.slotName] || {})\n                });\n            }\n\n            // 当前拖拽block的宽高\n            const { width, height } = dragComp.resize || {};\n            return (\n                <div class={classes.value} style={blockStyle.value} ref={blockEl}>\n                    {renderContent}\n                    {\n                        !!props.block.focus\n                        && (!!width || !!height)\n                        && <BlockResize block={props.block} component={dragComp} />\n                    }\n                </div>\n            )\n        }\n    }\n})\n\nexport default VisualEditorBlock;\n","import { provide, inject } from 'vue';\nimport { DropdownEvent } from './Index.d';\n\n// 选择一条选项，则关闭菜单（父子组件通信）\nexport const DropdownProvider = (() => {\n    const DROPDOWN_PROVIDER = '@@DROPDOWN_PROVIDER';\n    return {\n        provide: (handler: DropdownEvent) => provide(DROPDOWN_PROVIDER, handler),\n        inject: () => inject(DROPDOWN_PROVIDER) as DropdownEvent\n    }\n})();","// 右键菜单\nimport { computed, createApp, defineComponent, getCurrentInstance, onBeforeUnmount, onMounted, PropType, reactive, ref } from \"vue\";\nimport './Dropdown.scss';\n// 类型声明\nimport { IDropdownOption } from './Index';\n// 工具方法\nimport { DropdownProvider } from './Index.utils';\nimport { defer } from \"../../utils/defer\";\n\n\n// 弹窗组件，用于右键展示操作选项\nconst ServiceComponent = defineComponent({\n    props: {\n        option: {\n            type: Object as PropType<IDropdownOption>,\n            required: true\n        }\n    },\n    setup(props) {\n        // 获取当前组件实例，用于将将service绑定到实例上\n        const ctx = getCurrentInstance()!;\n        const dropdownRef = ref({} as HTMLDivElement);\n        // 响应是状态\n        const state = reactive({\n            option: props.option,\n            showFlag: false,\n            top: 0,\n            left: 0,\n            mounted: (() => {\n                const dfd = defer();\n                onMounted(() => {\n                    setTimeout(() => { // 增加延迟是为了第一次右键也有动画效果\n                        dfd.resolve()\n                    }, 0)\n                });\n                return dfd.promise;\n            })()\n        })\n        // 方法\n        const methods = {\n            show: async () => {\n                await state.mounted;\n                state.showFlag = true\n            },\n            hide: async () => {\n                state.showFlag = false\n            }\n        }\n\n        const service = (option: IDropdownOption) => {\n            state.option = option; \n            // HTMLElement\n            if ('addEventListener' in option.evt) {\n                const { top, left, height } = option.evt.getBoundingClientRect()!;\n                state.left = left;\n                state.top = top + height;\n                // MouseEvent\n            } else {\n                const { clientX, clientY } = option.evt;\n                state.left = clientX;\n                state.top = clientY;\n            }\n            methods.show();\n        }\n\n        // 计算类名\n        const classes = computed(() => [\n            'dropdown',\n            {\n                'dropdown-show': state.showFlag\n            }\n        ])\n        // 计算样式\n        const styles = computed(() => ({\n            top: `${state.top}px`,\n            left: `${state.left}px`\n        }))\n\n        // 将service绑定到实例上\n        Object.assign(ctx.proxy, { service });\n\n        // 点击block外的区域，则隐藏小弹窗\n        const onMousedownDocument = (e: MouseEvent) => {\n            if (!(dropdownRef.value).contains(e.target as HTMLElement)) {\n                methods.hide();\n            }\n        }\n        onMounted(() => document.body.addEventListener('mousedown', onMousedownDocument, true))\n        onBeforeUnmount(() => document.body.removeEventListener('mousedown', onMousedownDocument, true))\n\n        // 父组件向子组件传递关闭方法\n        DropdownProvider.provide({ onClick: methods.hide });\n\n        return () => (\n            <div class={classes.value} style={styles.value} ref={dropdownRef}>\n                {state.option.render()}\n            </div>\n        )\n    }\n\n})\n\n// 下拉组件\nconst $$dropdown = (() => {\n    let instance: any;\n    return (option: IDropdownOption) => {\n        if (!instance) {\n            const el = document.createElement('div');\n            document.body.append(el);\n            const app = createApp(ServiceComponent, { option });\n            instance = app.mount(el);\n        }\n        instance.service(option);\n    }\n})();\n\nexport default $$dropdown;\n","import { defineComponent } from 'vue';\nimport './DropdownOption.scss';\nimport { DropdownProvider } from './Index.utils';\n\n// 定义下拉组件\nconst DropdownOption = defineComponent({\n    props: {\n        label: { type: String },\n        icon: { type: String }\n    },\n    emits: {\n        click: (e: MouseEvent) => true\n    },\n    setup(props, ctx) {\n        // 子组件中调用关闭事件\n        const { onClick: dropdownClickHandler} = DropdownProvider.inject();\n        const handler = {\n            onClick: (e: MouseEvent) => {\n                ctx.emit('click', e); // 触发绑定的click方法\n                dropdownClickHandler(); // 关闭弹窗方法\n            }\n        }\n\n        return () => (\n            <div class=\"dropdown-option\" onClick={handler.onClick}>\n                <i class={`iconfont ${props.icon}`}></i>\n                <span>{props.label}</span>\n            </div>\n        )\n    }\n})\n\nexport default DropdownOption;\n","import { VisualEditorComponent } from '../visual-editor-menu/Index.d';\nimport { VisualEditorBlockData } from './Index.d';\n\n// 创建block\nexport function createNewBlock({ component, top, left }: { component: VisualEditorComponent, top: number, left: number }): VisualEditorBlockData {\n    return {\n        componentKey: component!.key, // input、text...\n        width: 0,\n        height: 0,\n        top,  // 距离顶部位置\n        left, // 距离左侧位置\n        adjustPosition: true, // 鼠标松开是否调整block位置居中\n        focus: false, // 是否为选中态\n        zIndex: 0, // 权重，用于置顶置底\n        hasResize: false, // 是否已经改变了block的宽高，改变了则使用数据中保存的宽高\n        props: {}, // 配置的属性\n        model: {}  // 绑定的字段\n    }\n}","import { defineComponent, PropType, computed, ref, reactive, Slot } from \"vue\";\n// 组件\nimport VisualEditorBlock from '../visual-editor-block/Index'\nimport $$dropdown from '../dropdown/Dropdown';\nimport DropdownOption from '../dropdown/DropdownOption'\n// 类型声明\nimport { VisualEditorComponent, VisualEditorConfig } from '../visual-editor-menu/Index.d';\nimport { VisualEditorBlockData, VisualEditorMarkLines } from '../visual-editor-block/Index.d';\nimport { VisualEditorContainer, VisualEditorState, VisualEditorFocusData } from '@/packages/Index.d';\nimport './Index.scss';\n// 方法\nimport { createNewBlock } from '../visual-editor-block/Index.utils'\n// provide\nimport { VisualEventBusProvider, VisualDragProvider } from '../../Index.utils';\n\nconst VisualEditorContent = defineComponent({\n    components: {\n        VisualEditorBlock\n    },\n    props: {\n        container: {\n            type: Object as PropType<VisualEditorContainer>,\n            default: { width: 500, height: 500 }\n        },\n        // 容器中展示的blocks\n        blocks: {\n            type: Array as PropType<VisualEditorBlockData[]>\n        },\n        // 配置都有哪些组件\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        // 绑定的数据\n        formData: {\n            type: Object as PropType<Record<string, any>>,\n            required: true\n        },\n        // 自定义属性\n        customProps: {\n            type: Object as PropType<Record<string, any>>\n        },\n        // 公共状态\n        state: {\n            type: Object as PropType<VisualEditorState>,\n            required: true\n        },\n        // 选中及未选中block\n        focusData: {\n            type: Object as PropType<{ value: VisualEditorFocusData}>,\n            required: true\n        },\n        // 选中及未选中block\n        commander: {\n            type: Object as any,\n            required: true\n        },\n        slots: {\n            type: Object as PropType<Record<string, Slot | undefined>>,\n            required: true\n        }\n    },\n    emits: [\n        'updateBlocks',\n        'clearFocus',\n        'resetSelectIndex',\n        'showBlockData',\n        'importBlockData'\n    ],\n\n    setup(props, ctx) {\n        const { dragStart, dragEnd } = VisualDragProvider.inject();\n\n        // ref获取画布元素\n        const containerRef = ref({} as HTMLDivElement);\n\n        // 画布样式\n        const canvasStyle = computed(() => ({\n            width: `${props.container.width}px`,\n            height: `${props.container.height}px`\n        }))\n\n        // methods\n        const methods = {\n            // 更新blocks\n            updateBlocks: (blocks?: VisualEditorBlockData[]) => {\n                ctx.emit('updateBlocks', blocks);\n            },\n            // 清除聚焦\n            clearFocus: (block?: VisualEditorBlockData) => {\n                ctx.emit('clearFocus', block);\n            },\n            // 设置当前选中的是哪个block\n            resetSelectIndex: (index: number) => {\n                ctx.emit('resetSelectIndex', index);\n            },\n            // 展示当前block的数据\n            showBlockData: (block: VisualEditorBlockData) => {\n                ctx.emit('showBlockData', block);\n            },\n            importBlockData: (block: VisualEditorBlockData) => {\n                ctx.emit('importBlockData', block);\n            }\n        }\n\n        /*** 事件监听，左侧菜单拖拽组件时，要求给容器绑定事件 ***/\n        const { eventBus } = VisualEventBusProvider.inject();\n        let dragComponent = null as null | VisualEditorComponent;\n        const containerHandler = {\n            // 鼠标设置为可放置状态\n            dragenter: (e: DragEvent) => { e.dataTransfer!.dropEffect = 'move'; },\n            dragover: (e: DragEvent) => { e.preventDefault(); },\n            // 鼠标设置为不可放置状态\n            dragleave: (e: DragEvent) => { e.dataTransfer!.dropEffect = 'none'; },\n            drop: (e: DragEvent) => {\n                // 单独拷贝一份，不能直接用，避免污染源数据\n                let blocks = [...props.blocks || []];\n                // 新增当前拖拽元素\n                blocks.push(createNewBlock({\n                    component: dragComponent!,\n                    top: e.offsetY,\n                    left: e.offsetX\n                }));\n                // 调用父级方法，同步容器中展示的最新blocks\n                methods.updateBlocks(blocks);\n                dragEnd.emit(); // 作用是调用 methods.updateBlocks， 记录第一次拖拽放置位置，用于撤销\n            }\n        };\n        // 绑定事件监听\n        eventBus.on((dragComp: VisualEditorComponent) => {\n            dragComponent = dragComp; // 当前拖拽的组件\n            containerRef.value.addEventListener('dragenter', containerHandler.dragenter);\n            containerRef.value.addEventListener('dragover', containerHandler.dragover);\n            containerRef.value.addEventListener('dragleave', containerHandler.dragleave);\n            containerRef.value.addEventListener('drop', containerHandler.drop);\n        })\n\n        // 工作区，聚焦\n        const focusHandler = {\n            container: {\n                onMousedown: (e: MouseEvent) => {\n                    // 点击的不是block元素，则忽略\n                    if (e.currentTarget !== e.target) return;\n                    e.preventDefault();\n                    // 如果是预览态，点击不生效\n                    if (props.state.preview) return;\n                    // 清除所有选中的block元素\n                    if (!e.shiftKey) {\n                        methods.clearFocus();\n                        methods.resetSelectIndex(-1);\n                    }\n                }\n            },\n            block: {\n                onMousedown: (e: MouseEvent, block: VisualEditorBlockData, index: number) => {\n                    // 如果是预览态，点击不生效\n                    if (props.state.preview) return;\n                    // 按下shift键，则切换当前block的选中态，否则清除除当前block外其他所有block的选中态\n                    if (e.shiftKey) {\n                        block.focus = !block.focus;\n                    } else {\n                        if (!block.focus) { // 多选拖拽\n                            block.focus = true;\n                            methods.clearFocus(block);\n                        }\n                    }\n                    // 设置当前操作的block\n                    methods.resetSelectIndex(index);\n                    // 记录当前位置\n                    blockDraggier.mousedown(e);\n                }\n            }\n        }\n        // 工作区拖拽\n        const blockDraggier = (() => {\n            const mark = reactive({\n                x: null as null | number,\n                y: null as null | number\n            })\n\n            let dragState = {\n                startX: 0,\n                startY: 0,\n                startLeft: 0,\n                startTop: 0,\n                startPos: [] as { left: number, top: number }[],\n                dragging: false, // 是否正在拖拽（move的时候才知道）\n                markLines: {} as VisualEditorMarkLines // {x:[{left:\"\", markX: ''}], y:[{top: \"\", markY: ''}]} 拖拽元素到达未聚焦元素的top时，引导线显示，引导线坐标为markY\n            }\n            const mousedown = (e: MouseEvent) => {\n                dragState = {\n                    startX: e.clientX, // 鼠标按下的开始位置\n                    startY: e.clientY,\n                    startLeft: props.state.selectBlock!.left, // 拖拽元素的初始位置\n                    startTop: props.state.selectBlock!.top,\n                    startPos: props.focusData.value.focus.map(({ top, left }) => ({ top, left })),\n                    dragging: false, // 是否正在拖拽\n                    markLines: (() => {\n                        const { focus, unFocus } = props.focusData.value;\n                        const { top, left, width, height } = props.state.selectBlock!;\n                        let lines: VisualEditorMarkLines = { x: [], y: [] };\n                        [...unFocus, { // 画布内元素对齐、画布对齐\n                            top: 0,\n                            left: 0,\n                            width: props.container.width,\n                            height: props.container.height\n                        }].forEach(block => {\n                            const { top: t, left: l, width: w, height: h } = block;\n                            lines.y.push({ top: t, markY: t }); // 拖拽元素顶部对齐其他元素顶部\n                            lines.y.push({ top: t + h, markY: t + h }); // 顶部对齐底部\n                            lines.y.push({ top: t + h / 2 - height / 2, markY: t + h / 2 }); // 中间对齐（垂直）\n                            lines.y.push({ top: t - height, markY: t }); // 底部对齐顶部\n                            lines.y.push({ top: t + h - height, markY: t + h }); // 底部对齐底部\n\n                            lines.x.push({ left: l, markX: l }); // 左侧对齐左侧\n                            lines.x.push({ left: l + w, markX: l + w }); // 左侧对齐右侧\n                            lines.x.push({ left: l + w / 2 - width / 2, markX: l + w / 2 }); // 中间对齐（水平）\n                            lines.x.push({ left: l - width, markX: l }); // 右侧对齐左侧\n                            lines.x.push({ left: l + w - width, markX: l + w }); // 右侧对齐右侧\n                        })\n                        return lines;\n                    })()\n                }\n                document.addEventListener('mousemove', mousemove);\n                document.addEventListener('mouseup', mouseup);\n            }\n            const mousemove = (e: MouseEvent) => {\n                // 修改拖拽标识\n                if (!dragState.dragging) {\n                    dragState.dragging = true;\n                    dragStart.emit();\n                }\n\n                // 获取当前鼠标的位置，以及鼠标按下时的初始位置，以及拖拽元素的offsetLeft和offsetTop\n                let { clientX: moveX, clientY: moveY } = e;\n                const { startX, startY, startLeft, startTop } = dragState; // 鼠标按下开始移动时候记录的点击位置\n\n                // 拖拽过程中如果按下shift键，则只允许一个方向移动\n                if (e.shiftKey) {\n                    if (Math.abs(moveX - startX) > Math.abs(moveY - startY)) {\n                        moveY = startY;\n                    } else {\n                        moveX = startX;\n                    }\n                }\n                // 当前拖拽元素距离左边和上面的距离（当前位置）\n                const currentLeft = startLeft + moveX - startX;\n                const currentTop = startTop + moveY - startY;\n\n                const currentMark = {\n                    x: null as null | number,\n                    y: null as null | number\n                };\n                for (let i = 0; i < dragState.markLines.y.length; i++) {\n                    const { top, markY } = dragState.markLines.y[i];\n                    if (Math.abs(top - currentTop) < 5) {\n                        moveY = top + startY - startTop;\n                        currentMark.y = markY;\n                        break;\n                    }\n                }\n                for (let i = 0; i < dragState.markLines.x.length; i++) {\n                    const { left, markX } = dragState.markLines.x[i];\n                    if (Math.abs(left - currentLeft) < 5) {\n                        moveX = left + startX - startLeft;\n                        currentMark.x = markX;\n                        break;\n                    }\n                }\n                mark.x = currentMark.x;\n                mark.y = currentMark.y;\n\n                // 修改拖拽元素的位置\n                const durX = moveX - startX;\n                const durY = moveY - startY;\n                props.focusData.value.focus.forEach((block, index) => {\n                    block.top = dragState.startPos[index].top + durY;\n                    block.left = dragState.startPos[index].left + durX;\n                })\n            }\n            const mouseup = (e: MouseEvent) => {\n                document.removeEventListener('mousemove', mousemove);\n                document.removeEventListener('mouseup', mouseup);\n                // 鼠标抬起，移除引导线\n                mark.x = null;\n                mark.y = null;\n                // 鼠标抬起，如果是拖拽状态，则触发更新\n                if (dragState.dragging) {\n                    dragEnd.emit();\n                }\n            }\n            return { mark, mousedown }\n        })();\n\n        // 其他事件处理，比如右键\n        const handler = {\n            onContextmenuBlock: (e: MouseEvent, block: VisualEditorBlockData) => {\n                // 如果是预览态，点击不生效\n                if (props.state.preview) return;\n                e.preventDefault();\n                e.stopPropagation();\n                $$dropdown({\n                    evt: e,\n                    render: () => <>\n                        <DropdownOption label=\"置顶节点\" icon=\"el-icon-top\" {...{ onClick: props.commander.placeTop }} />\n                        <DropdownOption label=\"置底节点\" icon=\"el-icon-bottom\" {...{ onClick: props.commander.placeBottom }} />\n                        <DropdownOption label=\"删除节点\" icon=\"el-icon-delete\" {...{ onClick: props.commander.delete }} />\n                        <DropdownOption label=\"查看数据\" icon=\"el-icon-reading\" {...{ onClick: () => methods.showBlockData(block) }} />\n                        <DropdownOption label=\"导入节点\" icon=\"el-icon-s-promotion\" {...{ onClick: () => methods.importBlockData(block) }} />\n                    </>\n                })\n            }\n        }\n\n        return () => <>\n            <div class=\"visual-editor-content\">\n                <div class=\"visual-editor-canvas\"\n                    style={canvasStyle.value}\n                    ref={containerRef}\n                    {...focusHandler.container}\n                >\n                    <div>\n                        width: {props.container.width}\n                        height: {props.container.height} <br></br>\n                        blocks: {JSON.stringify(props.blocks)} <br></br>\n                        坐标---y:{blockDraggier.mark.y}---x:{blockDraggier.mark.x} <br></br>\n                        提交数据formData: {JSON.stringify(props.formData)}\n                    </div>\n                    {\n                        (props.blocks || []).map((block, index) => (\n                            <visual-editor-block\n                                key={index}\n                                block={block}\n                                config={props.config}\n                                formData={props.formData}\n                                customProps={props.customProps}\n                                slots={props.slots}\n                                {...{\n                                    onMousedown: (e: MouseEvent) => focusHandler.block.onMousedown(e, block, index),\n                                    onContextmenu: (e: MouseEvent) => handler.onContextmenuBlock(e, block)\n                                }}\n                            />\n                        ))\n                    }\n                    {blockDraggier.mark.y !== null && (\n                        <div class=\"visual-editor-mark-line-y\" style={{ top: `${blockDraggier.mark.y}px` }}></div>\n                    )}\n                    {blockDraggier.mark.x !== null && (\n                        <div class=\"visual-editor-mark-line-x\" style={{ left: `${blockDraggier.mark.x}px` }}></div>\n                    )}\n                </div>\n            </div>\n        </>\n    }\n})\n\nexport default VisualEditorContent;\n","import { VisualEditorProps, VisualEditorSelectOptions, VisualEditorTableOption } from './Index.d';\n// 功能菜单的表单类型\nexport enum VisualEditorPropsType {\n    input = 'input',\n    color = \"color\",\n    select = \"select\",\n    table = \"table\"\n}\n\n// 创建input输入框属性\nexport function createEditorInputProp(label: string): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.input,\n        label\n    }\n}\n\n// 创建color颜色选择器属性\nexport function createEditorColorProp(label: string): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.color,\n        label\n    }\n}\n\n// 创建下拉框属性\nexport function createEditorSelectProp(label: string, options: VisualEditorSelectOptions): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.select,\n        label,\n        options\n    }\n}\n\n// 创建表格table属性\nexport function createEditorTableProp(label: string, option: VisualEditorTableOption): VisualEditorProps {\n    return {\n        type: VisualEditorPropsType.table,\n        label,\n        table: option\n    }\n}\n","import { defineComponent, PropType, getCurrentInstance, reactive, onMounted, createApp } from 'vue';\n// 组件\nimport { ElButton, ElInput, ElDialog, ElTable, ElTableColumn } from 'element-plus';\n// 类型声明\nimport { TablePropEditorOption } from './Index.d';\n// 插件\nimport { defer } from '../../utils/defer';\nimport deepcopy from 'deepcopy';\n\n// 定义组件\nconst ServiceComponent = defineComponent({\n    props: {\n        option: {\n            type: Object as PropType<TablePropEditorOption>,\n            required: true\n        }\n    },\n    setup(props) {\n        // 获取当前组件实例，用于将将service绑定到实例上\n        const ctx = getCurrentInstance()!;\n\n        // 响应式数据\n        const state = reactive({\n            option: props.option,\n            showFlag: false, // 展示弹窗\n            mounted: (() => {\n                const dfd = defer();\n                onMounted(() => setTimeout(() => dfd.resolve(), 0))\n                return dfd.promise;\n            })(),\n            editData: [] as any[] // 当前编辑的数据\n        })\n\n        // 方法\n        const methods = {\n            service: (option: TablePropEditorOption) => {\n                state.option = option;\n                state.editData = deepcopy(option.data || []);\n                methods.show();\n            },\n            show: async () => {\n                await state.mounted;\n                state.showFlag = true;\n            },\n            hide: () => {\n                state.showFlag = false;\n            },\n            add: () => {\n                state.editData.push({});\n            },\n            reset: () => {\n                state.editData = deepcopy(state.option.data);\n            }\n        }\n\n        const handler = {\n            onCancel: () => {\n                methods.hide();\n            },\n            onConfirm: () => {\n                state.option.onConfirm(state.editData);\n                methods.hide();\n            },\n            onDelete: (index: number) => {\n                state.editData.splice(index, 1);\n            }\n        }\n\n\n        Object.assign(ctx.proxy, methods);\n\n        // @ts-ignore\n        return () => <ElDialog v-model={state.showFlag}>\n            {{\n                default: () => (\n                    <div>\n                        <div>\n                            <ElButton type=\"primary\" {...{ onClick: methods.add } as any}>添加</ElButton>\n                            <ElButton {...{ onClick: methods.reset } as any}>重置</ElButton>\n                        </div>\n\n                        <ElTable data={state.editData}>\n                            <ElTableColumn {...{ type: 'index' } as any} />\n                            {state.option.config.table!.options.map((item) => (\n                                <ElTableColumn {...{ label: item.label } as any}>\n                                    {{\n                                        default: ({ row }: { row: any }) => {\n                                            return <ElInput v-model={row[item.field]} />\n                                        }\n                                    }}\n                                </ElTableColumn>\n                            ))}\n                            <ElTableColumn {...{ label: '操作栏' } as any}>\n                                {{\n                                    default: ({ $index }: { $index: number }) => <ElButton\n                                        type=\"danger\"\n                                        {...{ onClick: () => handler.onDelete($index) } as any}\n                                        >删除\n                                    </ElButton>\n\n                                }}\n                            </ElTableColumn>\n                        </ElTable>\n                    </div>\n                ),\n                footer: () => <>\n                    <ElButton {...{ onClick: handler.onCancel } as any}>取消</ElButton>\n                    <ElButton type=\"primary\" {...{ onClick: handler.onConfirm } as any}>确定</ElButton>\n                </>\n            }}\n        </ElDialog>\n    }\n})\n\nconst $$TablePropEditorDialog = (() => {\n    let instance: any;\n    return (option: Omit<TablePropEditorOption, 'onConfirm'>) => {\n        if (!instance) {\n            const el = document.createElement('div');\n            document.body.appendChild(el);\n            const app = createApp(ServiceComponent, { option });\n            instance = app.mount(el);\n        }\n        const dfd = defer<any[]>();\n        instance.service({\n            ...option,\n            onConfirm: dfd.resolve\n        });\n        return dfd.promise;\n    }\n})()\n\nexport default $$TablePropEditorDialog;\n","import { ref, watch, defineComponent } from 'vue';\n\nexport function useModel<T>(getter: () => T, emitter: (val: T) => void) {\n    // 获取getter函数的返回值，并单独保存一份\n    const state = ref(getter()) as { value: T };\n    // 观察getter，取值操作，则重新给state赋值， 测试时，两个TestUserModel需要这个\n    watch(getter, (val: T) => {\n        if (val !== state.value) {\n            state.value = val;\n        }\n    })\n    // 返回计算属性，获取\n    return {\n        get value() { return state.value },\n        set value(val: T) {\n            if (state.value !== val) {\n                state.value = val;\n                emitter(val);\n            }\n        }\n    }\n}\n\n// 测试useModel\nexport const TestUseModel = defineComponent({\n    props: {\n        modelValue: {\n            type: Object\n        }\n    },\n    emits: {\n        'update:modelValue': (val?: any) => {\n            return true;\n        }\n    },\n    setup(props, ctx) {\n        const model: any = useModel(() => props.modelValue, val => ctx.emit('update:modelValue', val));\n        // console.log('model :>> ', model);\n        setTimeout(() => {\n            model.value.blocks = [{\n                componentKey: \"text\",\n                top: 100,\n                left: 100\n            },\n            {\n                componentKey: \"input\",\n                top: 300,\n                left: 300\n            }]\n            model.value.container.width = 50;\n        }, 3000)\n        return () => (\n            <div>\n                自定义的输入框\n                {\n                    (model.value.blocks || []).map((item: any) => (\n                        <div>{item.componentKey}</div>\n                    ))\n                }\n                <div>containerWidth: {model.value.container.width}</div>\n            </div>\n        )\n    }\n})","import { defineComponent, PropType } from 'vue';\n// 组件\nimport $$TablePropEditorDialog from './TablePropEditorDialog';\nimport { ElTag, ElButton } from 'element-plus';\n// 类型声明\nimport { VisualEditorProps } from '../visual-editor-props/Index.d';\n// 工具函数\nimport { useModel } from '../../plugins/useModel';\n\n// 右侧点击tag，添加属性\nconst TablePropEditor = defineComponent({\n    props: {\n        modelValue: { // 属性名, 如：type，size\n            type: Array as PropType<any[]>\n        },\n        propConfig: { // 属性值\n            type: Object as PropType<VisualEditorProps>,\n            required: true\n        }\n    },\n    emits: {\n        'update:modelValue': (val?: any[]) => true\n    },\n    setup(props, ctx) {\n        // 监听属性名，属性名变动\n        const model = useModel(() => props.modelValue, val => ctx.emit('update:modelValue', val));\n        \n        const onClick = async () => {\n            // 展示弹窗 data是添加的数据集合\n            const data = await $$TablePropEditorDialog({\n                config: props.propConfig,\n                data: props.modelValue || []\n            })\n            model.value = data;\n        }\n\n        return () => (\n            <div>\n                {   // 如果没有值，则展示添加按钮\n                    (!model.value || model.value.length == 0) && <ElButton {...{onClick} as any}>添加</ElButton>\n                }\n                {   // 如果有值，则展示tag\n                    (model.value || []).map((item) => (\n                        <ElTag {...{onClick} as any}>\n                            {item[props.propConfig.table!.showKey]}\n                        </ElTag>\n                    ))\n                }\n            </div>\n        )\n    }\n})\n\nexport default TablePropEditor;\n","import { defineComponent, reactive, watch, PropType } from \"vue\";\nimport './Index.scss';\n// 类型声明\nimport { VisualEditorModelValue } from '../../Index.d';\nimport { VisualEditorBlockData } from '../visual-editor-block/Index.d';\nimport { VisualEditorConfig } from '../visual-editor-menu/Index.d';\nimport { VisualEditorProps } from './Index.d';\n// 工具函数\nimport { VisualEditorPropsType } from './Index.utils';\n// 组件插件\nimport TablePropEditor from '../table-prop-editor/TablePropEditor';\nimport { ElForm, ElFormItem, ElInputNumber, ElButton, ElInput, ElColorPicker, ElSelect, ElOption } from 'element-plus';\nimport deepcopy from 'deepcopy';\n\nconst VisualEditorProps = defineComponent({\n    props: {\n        block: { // 当前选中的block元素，包含位置、属性、model等\n            type: Object as PropType<VisualEditorBlockData>\n        },\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        dataModel: {\n            type: Object as PropType<{ value: VisualEditorModelValue }>,\n            required: true\n        }\n    },\n    emits: [\n        'updateBlock',\n        'updateDataModel'\n    ],\n    setup(props, ctx) {\n        // 响应式数据\n        const state = reactive({\n            editData: '' as any, // 编辑数据\n        });\n\n        // 观察当前操作的block\n        watch(() => props.block, (val) => {\n            // 不存在，则编辑容器\n            if (!val) {\n                state.editData = deepcopy(props.dataModel.value.container); // {width: 100, height: 100}\n                // 存在，则编辑当前block\n            } else {\n                state.editData = deepcopy(val || {});\n            }\n        }, { immediate: true });\n\n        // 应用、重置功能按钮\n        const methods = {\n            apply: () => {\n                // 编辑容器属性\n                if (!props.block) {\n                    ctx.emit('updateDataModel', {\n                        ...props.dataModel.value,\n                        container: state.editData\n                    })\n                    // 编辑block的属性\n                } else {\n                    const newBlock = state.editData;\n                    ctx.emit('updateBlock', newBlock, props.block)\n                }\n            },\n            reset: () => {\n                if (!props.block) {\n                    state.editData = deepcopy(props.dataModel.value.container);\n                } else {\n                    state.editData = deepcopy(props.block || {})\n                }\n            }\n        };\n\n        // 根据枚举，不同的类型渲染不同的组件\n        const renderEditor = (propName: string, propConfig: VisualEditorProps) => {\n            return {\n                [VisualEditorPropsType.input]: () => (<ElInput v-model={state.editData.props[propName]} />),\n                [VisualEditorPropsType.color]: () => (<ElColorPicker v-model={state.editData.props[propName]} />),\n                [VisualEditorPropsType.select]: () => (<ElSelect v-model={state.editData.props[propName]}>\n                    {(() => {\n                        return propConfig.options!.map(opt => {\n                            return <ElOption label={opt.label} value={opt.val} />\n                        })\n                    })()}\n                </ElSelect>),\n                [VisualEditorPropsType.table]: () => (\n                    <TablePropEditor\n                        v-model={state.editData.props[propName]} // 当前操作block的属性名， 如：type、size、color\n                        propConfig={propConfig} // 当前操作block的属性值\n                    />\n                ),\n            }[propConfig.type]()\n        };\n\n        return () => {\n            let content: JSX.Element[] = [];\n            // 没有选中任何block\n            if (!props.block) {\n                content.push(<>\n                    <ElFormItem label=\"容器宽度\">\n                        <ElInputNumber v-model={state.editData.width} {...{ step: 100 }} />\n                    </ElFormItem>\n                    <ElFormItem label=\"容器高度\">\n                        <ElInputNumber v-model={state.editData.height} {...{ step: 100 }} />\n                    </ElFormItem>\n                </>)\n                // 选中block，展示对应的操作功能组件\n            } else {\n                const { componentKey } = props.block; // 当前选中block的组件类型: 如：button, input, text, select \n                const component = props.config.componentMap[componentKey]; // {key: 'button', label: '按钮'，props: {}, preview: fn, render: fn}\n\n                // 组件标识， slotName\n                content.push(\n                    <ElFormItem label=\"组件标识\">\n                        <ElInput v-model={state.editData.slotName} />\n                    </ElFormItem>\n                );\n\n                if (!!component) {\n                    // 组件绑定属性\n                    if (!!component.props) {\n                        content.push(<>\n                            {\n                                Object.entries(component.props || {}).map(([propName, propConfig]) => ( // props: {text:\"xx\", type:\"primary\", size:\"24px\", color:\"red\", options:[options:[], showKey: 'tag']}\n                                    <ElFormItem label={propConfig.label} key={propName}>\n                                        {renderEditor(propName, propConfig)}\n                                    </ElFormItem>\n                                ))\n                            }\n                        </>)\n                    }\n                    // 组件绑定字段\n                    if (!!component.model) {\n                        content.push(<>\n                            {\n                                Object.entries(component.model || {}).map(([moduleName, label]) => (\n                                    <ElFormItem label={label}>\n                                        <ElInput v-model={state.editData.model[moduleName]} />\n                                    </ElFormItem>\n                                ))\n                            }\n                        </>)\n                    }\n                }\n            }\n\n            return (\n                <div class=\"visual-editor-props\">\n                    <h3>组件属性</h3>\n                    <ElForm labelPosition=\"top\">\n                        {content}\n                        <ElFormItem>\n                            <ElButton {...{ onClick: methods.reset } as any}>重置</ElButton>\n                            <ElButton type=\"primary\" {...{ onClick: methods.apply } as any}>应用</ElButton>\n                        </ElFormItem>\n                    </ElForm>\n                </div>\n            )\n        }\n    }\n})\n\nexport default VisualEditorProps;\n","export const KeyboardCode = {\n    16: 'shift',\n    17: 'ctrl',\n    18: 'alt',\n\n    8: 'backspace',\n    9: 'tab',\n    13: 'enter',\n    27: 'esc',\n    32: 'space',\n\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down',\n    46: 'delete',\n    189: '-',\n    187: '=',\n\n    48: '0',\n    49: '1',\n    50: '2',\n    51: '3',\n    52: '4',\n    53: '5',\n    54: '6',\n    55: '7',\n    56: '8',\n    57: '9',\n\n    65: 'a',\n    66: 'b',\n    67: 'c',\n    68: 'd',\n    69: 'e',\n    70: 'f',\n    71: 'g',\n    72: 'h',\n    73: 'i',\n    74: 'j',\n    75: 'k',\n\n    76: 'l',\n    77: 'm',\n    78: 'n',\n    79: 'o',\n    80: 'p',\n    81: 'q',\n    82: 'r',\n    83: 's',\n    84: 't',\n    85: 'u',\n    86: 'v',\n    87: 'w',\n    88: 'x',\n    89: 'y',\n    90: 'z',\n\n    112: 'F1',\n    113: 'F2',\n    114: 'F3',\n    115: 'F4',\n    116: 'F5',\n    117: 'F6',\n    118: 'F7',\n    119: 'F8',\n    120: 'F9',\n    121: 'F10',\n    122: 'F11',\n    123: 'F12',\n} as Record<number, string>","// 命令注册 基类\nimport { reactive, onUnmounted } from 'vue';\nimport { KeyboardCode } from '../../utils/keyboard-code';\nimport { CommandExecute, Command } from './VisualCommand.d';\n\n// 创建快捷键\nexport function useCommander() {\n    const state = reactive({\n        current: -1, // 游标\n        queue: [] as CommandExecute[], // [{undo, redo}, {deleteUndo, deleteRedo}, {dragUndo, dragRedo} ...]\n        commands: {} as Record<string, (...args: any[]) => void>, // {undo:()=>{redo()}, redo:()=>{redo()}, delete:()=> {redo()}, drag:()=> {redo()}, ...}\n        commandArray: [] as Command[], // 注册的完整对象集合 [{name: 'xx', keywords: \"\", followQueue: false, execute: () => {redo, undo}}]\n        destroyList: [] as ((() => void | undefined))[], // 移除事件 removeEventListener\n    })\n    // 注册函数\n    const register = (command: Command) => {\n        // 保存注册的对象\n        state.commandArray.push(command);\n        // 根据名称构建注册对象，并保存，等到调用的时候执行内部代码\n        state.commands[command.name] = (...args) => {\n            // 执行redo\n            const { undo, redo } = command.execute(...args);\n            redo();\n            // 如果需要保存到queue中，则进行保存，游标加1\n            if (command.followQueue) {\n                let { queue, current } = state;\n                if (queue.length > 0) {\n                    queue = queue.slice(0, current + 1); // 1 => 2 => 3 => 4 => 3 => 5， 4不会保留\n                    state.queue = queue;\n                }\n                queue.push({ undo, redo })\n                state.current = current + 1;\n            }\n        }\n        // 调用注册对象的init方法\n        command.init && command.init();\n    }\n\n    // 键盘事件\n    const keyboardEvent = (() => {\n        // 键盘事件处理\n        const onKeydown = (e: KeyboardEvent) => {\n            // console.log(e);\n            // 当前聚焦状态的Element不是document.body，则阻止\n            if (document.activeElement !== document.body) return;\n            const { keyCode, shiftKey, altKey, ctrlKey, metaKey } = e;\n            // 复合键处理\n            let keyString: string[] = [];\n            if (ctrlKey || metaKey) keyString.push('ctrl');\n            if (shiftKey) keyString.push('shift');\n            if (altKey) keyString.push('alt');\n            keyString.push(KeyboardCode[keyCode]);\n            const keyNames = keyString.join('+');\n            // console.log('当前键盘', keyNames);\n\n            // 找到注册的方法并执行\n            state.commandArray.forEach(({ keyboard, name }) => {\n                if (!keyboard) return;\n                const keys = Array.isArray(keyboard) ? keyboard : [keyboard];\n                if (keys.indexOf(keyNames) > -1) {\n                    state.commands[name](); // 执行\n                    e.stopPropagation();\n                    e.preventDefault(); // 阻止默认行为，比如Ctrl+D会触发收藏，现在阻止了，只执行我们定义的\n                }\n            })\n\n        }\n        const init = () => {\n            // 订阅键盘按下事件\n            window.addEventListener('keydown', onKeydown);\n            // 销毁键盘事件\n            return () => window.removeEventListener('keydown', onKeydown);\n        }\n        return init;\n    })();\n\n    // 注册撤销和重做\n    const registerRedoUndo = () => {\n        // 注册撤销\n        register({\n            name: 'undo',\n            keyboard: 'ctrl+z',\n            followQueue: false,\n            execute: (...args) => {\n                return {\n                    undo: () => { /* console.log('undo撤销') */ },\n                    redo: () => {\n                        console.log('执行撤销');\n                        if (state.current === -1) return;\n                        const { undo } = state.queue[state.current];\n                        console.log('执行撤销函数', undo);\n                        !!undo && undo();\n                        state.current -= 1;\n                    }\n                }\n            }\n        })\n        // 注册重做\n        register({\n            name: 'redo',\n            keyboard: ['ctrl+y', 'ctrl+shift+z'],\n            followQueue: false,\n            execute: (...args) => {\n                return {\n                    undo: () => { /* console.log('redo撤销') */ },\n                    redo: () => {\n                        console.log('执行重做');\n                        const queueItem = state.queue[state.current + 1];\n                        if (!!queueItem) {\n                            queueItem.redo();\n                            state.current++;\n                        }\n                    }\n                }\n            }\n        })\n    }\n\n    // 初始化\n    const init = () => {\n        // 保存销毁函数\n        state.commandArray.forEach(command => !!command.init && state.destroyList.push(command.init()));\n        // 初始化键盘事件，添加移除事件\n        state.destroyList.push(keyboardEvent());\n        // 注册撤销和重做\n        registerRedoUndo();\n    }\n\n    onUnmounted(() => {\n        state.destroyList.forEach(fn => !!fn && fn());\n    })\n\n    return {\n        state,\n        register,\n        init\n    }\n}","// 类型声明\nimport { VisualEditorBlockData } from '../../components/visual-editor-block/Index.d';\nimport { VisualEditorModelValue } from '../../Index.d';\n// 引入注册函数\nimport { useCommander } from './Command.plugin';\nimport deepcopy from 'deepcopy';\n\n// 注册其他点击事件\nexport function useVisualCommand({ dataModel, focusData, updateBlocks, dragStart, dragEnd }: {\n    dataModel: { value: VisualEditorModelValue },\n    focusData: { value: { focus: VisualEditorBlockData[], unFocus: VisualEditorBlockData[] } },\n    updateBlocks: (blocks?: VisualEditorBlockData[]) => void,\n    dragStart: { on: (cb: () => void) => void, off: (cb: () => void) => void },\n    dragEnd: { on: (cb: () => void) => void, off: (cb: () => void) => void }\n}) {\n    // 注册函数\n    const commander = useCommander();\n    commander.init();\n\n    // 注册删除\n    commander.register({\n        name: 'delete',\n        keyboard: [\n            'backspace',\n            'delete',\n            'ctrl+d'\n        ],\n        followQueue: true,\n        execute: () => {\n            console.log('执行删除命令');\n            let data = {\n                before: dataModel.value.blocks,\n                after: focusData.value.unFocus\n            }\n            return {\n                undo: () => {\n                    console.log('撤回删除命令');\n                    updateBlocks(data.before);\n                },\n                redo: () => {\n                    console.log('redo删除命令');\n                    updateBlocks(data.after);\n                }\n            }\n        }\n    })\n\n    // 注册拖拽\n    commander.register({\n        name: 'drag',\n        followQueue: true,\n        init() {\n            this.data = {\n                before: null as null | VisualEditorBlockData[]\n            }\n            const handler = {\n                dragstart: () => {\n                    this.data.before = deepcopy(dataModel.value.blocks);\n                },\n                dragend: () => {\n                    commander.state.commands.drag(); // 其实就是redo，并且将拖拽redo audo保存一份到数组queue中，用于撤销操作\n                }\n            }\n            // 添加订阅\n            dragStart.on(handler.dragstart);\n            dragEnd.on(handler.dragend);\n            // 销毁订阅\n            return () => {\n                console.log('拖拽-销毁订阅');\n                dragStart.off(handler.dragstart);\n                dragEnd.off(handler.dragend);\n            }\n        },\n        execute() {\n            let before = this.data.before;\n            let after = deepcopy(dataModel.value.blocks);\n            return {\n                undo: () => {\n                    console.log('undo撤回拖拽命令', before);\n                    updateBlocks(before);\n                },\n                redo: () => {\n                    console.log('redo拖拽命令', after);\n                    updateBlocks(after);\n                }\n            }\n        }\n    })\n\n    // 注册清空\n    commander.register({\n        name: 'clear',\n        followQueue: true,\n        execute() {\n            let data = {\n                before: deepcopy(dataModel.value.blocks),\n                after: []\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回清空命令');\n                    updateBlocks(data.before);\n                },\n                redo: () => {\n                    console.log('redo清空命令');\n                    updateBlocks(data.after);\n                }\n            }\n        }\n    })\n\n    // 注册置顶\n    commander.register({\n        name: 'placeTop',\n        keyboard: 'ctrl+up',\n        followQueue: true,\n        execute() {\n            let data = {\n                before: deepcopy(dataModel.value.blocks),\n                after: (() => {\n                    const { focus, unFocus } = focusData.value;\n                    const maxZIndex = unFocus.reduce((prev, block) => Math.max(prev, block.zIndex), 0) + 1;\n                    // 给选中元素增加权重\n                    focus.forEach(block => block.zIndex = maxZIndex);\n                    return deepcopy(dataModel.value.blocks);\n                })()\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回置顶命令', data.before);\n                    updateBlocks(deepcopy(data.before));\n                },\n                redo: () => {\n                    console.log('redo置顶命令', data.after);\n                    updateBlocks(deepcopy(data.after));\n                }\n            }\n        }\n    })\n\n    // 注册置底\n    commander.register({\n        name: 'placeBottom',\n        keyboard: 'ctrl+down',\n        followQueue: true,\n        execute() {\n            let data = {\n                before: deepcopy(dataModel.value.blocks),\n                after: deepcopy((() => {\n                    const { focus, unFocus } = focusData.value;\n                    let minZIndex = unFocus.reduce((prev, block) => Math.min(prev, block.zIndex), Infinity) - 1;\n                    if (minZIndex < 0) { // 小于0,就让他等于0（小于0不太好）\n                        const dur = Math.abs(minZIndex);\n                        unFocus.forEach(block => block.zIndex += dur);\n                        minZIndex = 0;\n                    }\n                    // 给选中元素增加权重\n                    focus.forEach(block => block.zIndex = minZIndex);\n                    return deepcopy(dataModel.value.blocks);\n                })())\n            }\n            return {\n                undo: () => {\n                    console.log('undo撤回置底命令', data.before);\n                    updateBlocks(deepcopy(data.before));\n                },\n                redo: () => {\n                    console.log('redo置底命令', data.after);\n                    updateBlocks(deepcopy(data.after));\n                }\n            }\n        }\n    })\n\n    // 注册，全选\n    commander.register({\n        name: 'selectAll',\n        keyboard: 'ctrl+a',\n        followQueue: false,\n        execute: (val: VisualEditorModelValue) => {\n            return {\n                undo: () => {\n                    console.log('undo撤回全选命令');\n                },\n                redo: () => {\n                    console.log('redo全选命令');\n                    (dataModel.value.blocks || []).forEach(block => block.focus = true);\n                }\n            }\n        }\n    })\n\n    return {\n        undo: () => commander.state.commands.undo(), // 内部，作用是执行queue中的undo\n        redo: () => commander.state.commands.redo(), // 内部，作用是执行queue中的redo\n        delete: () => commander.state.commands.delete(), // 外部注册 删除\n        drag: () => commander.state.commands.drag(), // 外部注册 拖拽\n        clear: () => commander.state.commands.clear(), // 外部注册 清空\n        placeTop: () => commander.state.commands.placeTop(), // 外部注册 置顶\n        placeBottom: () => commander.state.commands.placeBottom() // 外部注册 置底\n    }\n}\n","type SimplyListener = (param: any) => void;\n\nexport function createEvent() {\n    let listeners: SimplyListener[] = [];\n    return {\n        on: (cb: SimplyListener) => {\n            listeners.push(cb);\n        },\n        off: (cb: SimplyListener) => {\n            const index = listeners.indexOf(cb);\n            if (index > -1) listeners.splice(index, 1);\n        },\n        emit: (param?: any) => {\n            listeners.forEach(item => item(param));\n        }\n    }\n}","import { defineComponent, PropType, ref, reactive, computed } from 'vue';\nimport './Index.scss';\n// 组件\nimport VisualEditorHeader from './components/visual-editor-header/Index';\nimport VisualEditorMenu from './components/visual-editor-menu/Index'\nimport VisualEditorContent from './components/visual-editor-content/Index'\nimport VisualEditorProps from './components/visual-editor-props/Index'\nimport $$dialog from './components/import-export-dialog/Index'\nimport { ElMessageBox } from 'element-plus';\n// 类型\nimport { VisualEditorModelValue, VisualEditorState } from './Index.d';\nimport { VisualEditorConfig } from './components/visual-editor-menu/Index.d';\nimport { VisualEditorBlockData } from './components/visual-editor-block/Index.d';\n// 注册方法\nimport { useVisualCommand } from './plugins/command/VisualCommand';\n// 中间件\nimport { useModel } from './plugins/useModel';\n// 其他\nimport { createEvent } from './utils/event';\nimport { VisualEventBusProvider, VisualDragProvider } from './Index.utils';\n\n\nconst VisualEditor = defineComponent({\n    components: {\n        VisualEditorHeader,\n        VisualEditorMenu,\n        VisualEditorContent,\n        VisualEditorProps\n    },\n    props: {\n        modelValue: {\n            type: Object as PropType<VisualEditorModelValue>,\n            required: true\n        },\n        // 配置都有哪些组件\n        config: {\n            type: Object as PropType<VisualEditorConfig>,\n            required: true\n        },\n        // 绑定的数据\n        formData: {\n            type: Object as PropType<Record<string, any>>,\n            required: true\n        },\n        // 自定义属性\n        customProps: {\n            type: Object as PropType<Record<string, any>>\n        }\n    },\n    emits: {\n        'update:modelValue': (val?: VisualEditorModelValue) => {\n            // 改变modelValue的值，调用此方法，会发射到父级\n            return true;\n        }\n    },\n    setup(props, ctx) {\n        // 将导入数据变为响应式，，监听数据变动，数据发生变化，同步到父级\n        const dataModel = useModel(() => props.modelValue, val => ctx.emit('update:modelValue', val));\n        // console.log('注册的组件dataModel', dataModel);\n\n        // 订阅事件，用于左侧组件拖拽时，联动给容器添加事件\n        const eventBus = createEvent();\n        VisualEventBusProvider.provide({ eventBus });\n        // 订阅事件，用于容器组件拖拽时，记录拖拽信息，实现撤销和重做\n        const dragStart = createEvent();\n        const dragEnd = createEvent();\n        VisualDragProvider.provide({dragStart, dragEnd});\n\n        // 当前选中操作的block(只保存一个，如果shift选择多个，则是最后一个)\n        let selectIndex = ref(-1);\n        const state: VisualEditorState = reactive({\n            selectBlock: computed(() => (dataModel.value.blocks || [])[selectIndex.value]),\n            preview: true, // 默认预览状态  预览-可输入  编辑-可拖拽\n            editFlag: true  // 当前是否开启了编辑器\n        })\n\n        // 计算选中与未选中的block\n        const focusData = computed(() => {\n            let focus: VisualEditorBlockData[] = [];\n            let unFocus: VisualEditorBlockData[] = [];\n            (dataModel.value.blocks || []).forEach(block => (block.focus ? focus : unFocus).push(block))\n            return {\n                focus,\n                unFocus\n            }\n        })\n        // 公共方法\n        const publicMethods = {\n            // 更新 dataModel\n            updateDataModel: (modelValue: VisualEditorModelValue) => {\n                dataModel.value = modelValue;\n            },\n            // 清除选中的block\n            clearFocus: (block?: VisualEditorBlockData) => {\n                let blocks = (dataModel.value.blocks || []);\n                if (!blocks.length) return;\n                if (!!blocks) {\n                    blocks = blocks.filter(item => item !== block);\n                }\n                blocks.forEach(block => block.focus = false);\n            },\n            // 更新block，渲染最新数据\n            updateBlocks: (blocks?: VisualEditorBlockData[]) => {\n                dataModel.value = {\n                    ...dataModel.value,\n                    blocks\n                }\n                // console.log('dataModel.value :>> ', dataModel.value);\n            },\n            // 更新单个block\n            updateBlock: (newBlock: VisualEditorBlockData, oldBlock: VisualEditorBlockData) => {\n                let oldBlocks = dataModel.value.blocks || [];\n                // 找到位置，替换成新的block\n                let blocks = [...oldBlocks];\n                const index = oldBlocks.indexOf(oldBlock);\n                if (index > -1) {\n                    blocks.splice(index, 1, newBlock);\n                }\n                publicMethods.updateBlocks(blocks);\n            },\n            // 查看数据\n            showBlockData: (block: VisualEditorBlockData) => {\n                $$dialog.textarea(JSON.stringify(block), '节点数据', { editReadonly: true });\n            },\n            // 导入节点\n            importBlockData: async (block: VisualEditorBlockData) => {\n                const text = await $$dialog.textarea('', '请输入节点JSON字符串');\n                try {\n                    try {\n                        const data = JSON.parse(text || '');\n                        publicMethods.updateBlock(data, block);\n                    } catch (e) {\n                        console.error(e);\n                        ElMessageBox.alert('解析JSON错误');\n                    }\n                } catch (e) {\n                    console.error(e);\n                }\n            },\n            // 重置selectIndex\n            resetSelectIndex: (index: number) => {\n                selectIndex.value = index;\n            },\n            // 修改预览或编辑状态\n            changePreviewState: (isPreview: boolean) => {\n                state.preview = isPreview;\n            }\n        }\n\n        // 顶部功能-撤销重做、置顶置底...\n        const commander = useVisualCommand({\n            dataModel,\n            focusData,\n            updateBlocks: publicMethods.updateBlocks,\n            dragStart,\n            dragEnd\n        });\n\n        return () => <>\n            <div class=\"visual-editor\">\n                <visual-editor-header\n                    dataModel={ dataModel }\n                    state={ state }\n                    commander={ commander }\n                    onUpdateDataModel={ publicMethods.updateDataModel }\n                    onClearFocus={ publicMethods.clearFocus } // 清除聚焦\n                    onChangePreviewState={ publicMethods.changePreviewState } // 清除聚焦\n                />\n\n                <section class=\"visual-editor-container\">\n                    <visual-editor-menu\n                        componentList={ props.config.componentList }\n                    />\n                    <visual-editor-content\n                        container={ dataModel.value.container }\n                        blocks={ dataModel.value.blocks }\n                        config={ props.config }\n                        formData={ props.formData }\n                        customProps={ props.customProps }\n                        state={ state }\n                        slots={ ctx.slots }\n                        focusData={ focusData }\n                        commander={ commander }\n                        onUpdateBlocks={ publicMethods.updateBlocks } // 更新blocks\n                        onClearFocus={ publicMethods.clearFocus } // 清除聚焦\n                        onResetSelectIndex={ publicMethods.resetSelectIndex } // 修改focus的block\n                        onShowBlockData={ publicMethods.showBlockData }\n                        onImportBlockData={ publicMethods.importBlockData }\n                    />\n                    <visual-editor-props\n                        block={ state.selectBlock }\n                        config={ props.config }\n                        dataModel={ dataModel }\n                        onUpdateBlock={ publicMethods.updateBlock }\n                        onUpdateDataModel={ publicMethods.updateDataModel }\n                    />\n                </section>\n            </div>\n        </>\n    }\n})\n\nexport default VisualEditor;\n","// 引入组件配置类型声明\nimport { VisualEditorComponent } from './Index.d';\n// 引入属性类型声明\nimport { VisualEditorProps } from '../visual-editor-props/Index.d';\n\n// 创建可视化编辑器配置\n// 返回组件列表、组件映射、注册函数\nexport function createVisualEditorConfig() {\n    const componentList: VisualEditorComponent[] = [];\n    const componentMap: Record<string, VisualEditorComponent> = {};\n    return {\n        componentList,\n        componentMap,\n        registry: <Props extends Record<string, VisualEditorProps> = {}, Model extends Record<string, string> = {}>(key: string, componentOptions: {\n            label: string,\n            preview: () => JSX.Element,\n            render: (data: {\n                props: { [k in keyof Props]: any },\n                model: Partial<{ [k in keyof Model]: any }>,\n                size: { width?: number, height?: number },\n                custom: Record<string, any>\n            }) => JSX.Element,\n            props?: Props,\n            model?: Model,\n            resize?: { width?: boolean, height?: boolean }\n        }) => {\n            let comp = { ...componentOptions, key };\n            componentList.push(comp);\n            componentMap[key] = comp;\n        }\n    }\n}","import { defineComponent } from \"vue\";\nimport './Index.scss';\nimport { useModel } from '../../plugins/useModel';\n\nconst NumberRange = defineComponent({\n    props: {\n        start: {\n            type: String\n        },\n        end: {\n            type: String\n        }\n    },\n    emits: {\n        'update:start': (val?: string) => true,\n        'update:end': (val?: string) => true\n    },\n    setup(props, ctx) {\n        const startModel = useModel(() => props.start, val => ctx.emit('update:start', val));\n        const endModel = useModel(() => props.end, val => ctx.emit('update:end', val));\n\n        return () => (\n            <div class=\"number-range\">\n                <input type=\"text\" v-model={startModel.value} />\n                <span>-</span>\n                <input type=\"text\" v-model={endModel.value} />\n            </div>\n        )\n    }\n})\n\nexport default NumberRange;\n","// 注册左侧菜单组件\nimport { createVisualEditorConfig } from './Index.utils';\nimport {\n    createEditorColorProp,\n    createEditorInputProp,\n    createEditorSelectProp,\n    createEditorTableProp\n} from '../visual-editor-props/Index.utils';\nimport NumberRange from '../number-range/Index';\nimport { ElButton, ElInput, ElOption, ElSelect } from 'element-plus';\n\n// 配置\nexport const VisualConfig = createVisualEditorConfig();\n\n// 注册文本\nVisualConfig.registry('text', {\n    label: '文本',\n    preview: () => '预览文本',\n    render: ({ props }) => <span style={{ color: props.color, fontSize: props.size }}>{props.text || '默认文本'}</span>,\n    props: {\n        text: createEditorInputProp('显示文本'),\n        color: createEditorColorProp('字体颜色'),\n        size: createEditorSelectProp('字体大小', [\n            { label: '14px', val: '14px' },\n            { label: '18px', val: '18px' },\n            { label: '24px', val: '24px' }\n        ])\n    }\n});\n\n// 注册按钮\nVisualConfig.registry('button', {\n    label: '按钮',\n    preview: () => <ElButton>按钮</ElButton>,\n    render: ({ props, size, custom }) => (\n        // width height 这么写的原因是：直接用size.width，拖拽改变宽高，然后撤回的时候，没有响应式变化\n        <ElButton\n            {...custom}\n            type={props.type}\n            size={props.size}\n            style={{\n                width: !!size.width ? `${size.width}px` : null,\n                height: !!size.height ? `${size.height}px` : null\n            }}\n        >\n            {props.text || '默认按钮'}\n        </ElButton>\n    ),\n    props: {\n        text: createEditorInputProp('显示文本'),\n        type: createEditorSelectProp('按钮类型', [\n            { label: '基础', val: 'primary' },\n            { label: '成功', val: 'success' },\n            { label: '警告', val: 'warning' },\n            { label: '危险', val: 'danger' },\n            { label: '提示', val: 'info' },\n            { label: '文本', val: 'text' }\n        ]),\n        size: createEditorSelectProp('按钮大小', [\n            { label: '默认', val: '' },\n            { label: '中等', val: 'medium' },\n            { label: '小', val: 'small' },\n            { label: '极小', val: 'mini' }\n        ])\n    },\n    resize: {\n        width: true,\n        height: true\n    }\n});\n\n// 注册下拉框\nVisualConfig.registry('select', {\n    label: '下拉框',\n    preview: () => <ElSelect />,\n    render: ({ props, model, custom }) => (\n        <ElSelect\n            {...custom}\n            key={(props.options || []).map((opt: any) => opt.value).join(',')}\n            {...model.default}\n        >\n            {\n                (props.options || []).map((opt: { label: string, value: string }, index: number) => (\n                    <ElOption label={opt.label} value={opt.value} key={index} />\n                ))\n            }\n        </ElSelect>\n    ),\n    props: {\n        options: createEditorTableProp('下拉选项', {\n            options: [\n                { label: '显示值', field: 'label' },\n                { label: '绑定值', field: 'value' },\n                { label: '备注', field: 'comments' }\n            ],\n            showKey: 'label'\n        })\n    },\n    model: {\n        default: '绑定字段'\n    }\n})\n\n// 注册输入框\nVisualConfig.registry('input', {\n    label: '输入框',\n    preview: () => <ElInput modelValue={\"\"} />,\n    render: ({ model, size, custom }) => <ElInput\n        {...custom}\n        {...model.default}\n        style={{\n            width: !!size.width ? `${size.width}px` : null,\n        }} />,\n    model: {\n        default: '绑定字段'\n    },\n    resize: {\n        width: true\n    }\n});\n\n// 注册数字范围输入框\nVisualConfig.registry('number-range', {\n    label: '数字范围输入框',\n    preview: () => <NumberRange />,\n    render: ({ model, size }) => <NumberRange\n        style={{ width: `${size.width}px` }}\n        {...{\n            start: model.start.value,\n            'onUpdate:start': model.start.onChange,\n            end: model.end.value,\n            'onUpdate:end': model.end.onChange,\n        }}\n    />,\n    model: {\n        start: '起始绑定字段',\n        end: '结束绑定字段'\n    },\n    resize: {\n        width: true\n    }\n});\n\n// 注册图片\nVisualConfig.registry('image', {\n    label: '图片',\n    preview: () => <img src=\"http://cn.vuejs.org/images/logo.png\" alt=\"图片alt\" />,\n    render: ({ props, size }) => (\n        <div\n            style={{ height: `${size.height || 100}px`, width: `${size.width || 100}px` }}\n            class=\"visual-block-img\">\n            <img src={props.url || 'http://cn.vuejs.org/images/logo.png'} />\n        </div>\n    ),\n    props: {\n        url: createEditorInputProp('地址')\n    },\n    resize: {\n        width: true,\n        height: true\n    }\n});\n","\nimport { defineComponent } from \"vue\";\nimport VisualEditor from \"./packages/Index\";\nimport { VisualConfig } from \"./packages/components/visual-editor-menu/VisualEditorConfig\";\n\nexport default defineComponent({\n  name: \"App\",\n  components: {\n    VisualEditor\n  },\n  data() {\n    return {\n      // 展示数据\n      jsonData: {\n        container: {\n          width: 1000,\n          height: 1000\n        },\n        blocks: []\n      },\n      // 配置数据\n      config: VisualConfig,\n      // 绑定的数据\n      formData: {},\n      // 自定义属性\n      customProps: {\n        myBtn: { // myBtn是组件标识，即slotName\n          onClick: () => {\n            this.$notify({ message: \"执行表单数据校验以及添加到服务器的动作\" });\n          }\n        },\n        mySelect: {\n          onChange: (val: any) => {\n            this.$notify({ message: `下拉框发生变化，${val}` });\n          }\n        }\n      }\n    };\n  }\n});\n","import { render } from \"./App.vue?vue&type=template&id=36aa04f0\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=36aa04f0&lang=scss\"\nscript.render = render\n\nexport default script","import { createApp } from 'vue';\nimport '@/assets/styles/index.scss';\nimport App from './App.vue';\n// element-plus\nimport ElementPlus from 'element-plus';\nimport 'element-plus/lib/theme-chalk/index.css';\n\nconst app = createApp(App)\napp.use(ElementPlus);\napp.mount('#app')\n"],"sourceRoot":""}